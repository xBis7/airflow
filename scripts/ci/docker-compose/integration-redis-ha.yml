# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
---
version: "3.8"

# Common
x-redis-env: &redis-env
  ALLOW_EMPTY_PASSWORD: "yes"

x-redis-primary: &redis-primary
  image: bitnami/redis:7.2
  environment:
    <<: *redis-env
    REDIS_ANNOUNCE_HOSTNAME: "redis"
  volumes:
    - redis-db-volume:/data/redis
  healthcheck:
    test: ["CMD", "redis-cli", "ping"]
    interval: 5s
    timeout: 30s
    retries: 50
  restart: "on-failure"

x-redis-replica: &redis-replica
  image: bitnami/redis:7.2
  environment:
    <<: *redis-env
    REDIS_REPLICATION_MODE: replica
    REDIS_MASTER_HOST: redis
    REDIS_MASTER_PORT_NUMBER: 6379
    REDIS_ANNOUNCE_HOSTNAME: "redis-replica"
  depends_on: [redis]

x-sentinel: &sentinel-common
  image: bitnami/redis-sentinel:7.2
  environment:
    <<: *redis-env
    REDIS_MASTER_SET: test-cluster
    REDIS_MASTER_HOST: redis
    REDIS_MASTER_PORT_NUMBER: 6379
    REDIS_SENTINEL_QUORUM: 2          # 3 sentinels â†’ quorum of 2
  depends_on:
    - redis
    - redis-replica-1
    - redis-replica-2

# Services
services:
  redis:
    <<: *redis-primary
    hostname: redis

  redis-replica-1:
    <<: *redis-replica
    hostname: redis-replica-1

  redis-replica-2:
    <<: *redis-replica
    hostname: redis-replica-2

  sentinel-1:
    <<: *sentinel-common
    hostname: sentinel-1
    # Expose one Sentinel for clients.
    ports: ["26379:26379"]

  sentinel-2:
    <<: *sentinel-common
    hostname: sentinel-2

  sentinel-3:
    <<: *sentinel-common
    hostname: sentinel-3

  worker:
    build:
      context: ..
      dockerfile: dockerfiles/Dockerfile.celery
      args:
        AIRFLOW_BASE_CI_IMAGE: ${AIRFLOW_CI_IMAGE}
    entrypoint: ["airflow-worker-entry"]
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CELERY__BROKER_URL: >
        sentinel://sentinel-1:26379;sentinel://sentinel-2:26379;sentinel://sentinel-3:26379/0
      AIRFLOW__CELERY_BROKER_TRANSPORT_OPTIONS__MASTER_NAME: test-cluster
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://postgres:postgres@postgres/airflow
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres/airflow
    depends_on:
      sentinel-1:
        condition: service_started
      airflow:
        condition: service_started

  #  flower:
  #    command: >
  #      celery --app airflow.providers.celery.executors.celery_executor.app
  #             flower --port=5555
  #    depends_on:
  #      - celery-worker

  airflow:
    depends_on:
      sentinel-1:
        condition: service_started
      sentinel-2:
        condition: service_started
      sentinel-3:
        condition: service_started
    #      worker:
    #        condition: service_started
    environment:
      - INTEGRATION_REDIS_HA=true
#      - INTEGRATION_CELERY=true
      - CELERY_FLOWER=true
      - AIRFLOW__CELERY__BROKER_URL=sentinel://sentinel-1:26379;sentinel://sentinel-2:26379;sentinel://sentinel-3:26379/0
      - AIRFLOW__CELERY_BROKER_TRANSPORT_OPTIONS__MASTER_NAME=test-cluster
volumes:
  redis-db-volume:
