========================================================================================== test session starts ===========================================================================================
platform linux -- Python 3.10.18, pytest-8.4.1, pluggy-1.6.0
rootdir: /opt/airflow
configfile: pyproject.toml
plugins: xdist-3.8.0, custom-exit-code-0.3.0, rerunfailures-15.1, requests-mock-1.12.1, instafail-0.5.0, asyncio-0.25.0, icdiff-0.9, cov-6.2.1, time-machine-2.16.0, unordered-0.7.0, timeouts-1.2.1, anyio-4.9.0, kgb-7.2, mock-3.14.1
asyncio: mode=strict, asyncio_default_fixture_loop_scope=function
setup timeout: 60.0s, execution timeout: 60.0s, teardown timeout: 60.0s
collected 16 items

airflow-core/tests/integration/cli/commands/test_celery_command.py sss                                                                                                                             [ 18%]
airflow-core/tests/integration/otel/test_otel.py ..FFFF                                                                                                                                            [ 56%]
airflow-core/tests/integration/security/test_kerberos.py sssssss                                                                                                                                   [100%]

================================================================================================ FAILURES ================================================================================================
________________________________________________________________ TestOtelIntegration.test_scheduler_change_after_the_first_task_finishes _________________________________________________________________
airflow-core/tests/integration/otel/test_otel.py:943: in test_scheduler_change_after_the_first_task_finishes
    wait_for_dag_run_and_check_span_status(
airflow-core/tests/integration/otel/test_otel.py:114: in wait_for_dag_run_and_check_span_status
    assert dag_run_span_status == span_status, (
E   AssertionError: Dag run span status isn't should_end as expected.Actual status: ended.
E   assert equals failed
E     'ended'                                <SpanStatus.SHOULD_END: 'should_end'>

During handling of the above exception, another exception occurred:
airflow-core/tests/integration/otel/test_otel.py:967: in test_scheduler_change_after_the_first_task_finishes
    scheduler_process_1.wait()
/usr/local/lib/python3.10/subprocess.py:1209: in wait
    return self._wait(timeout=timeout)
/usr/local/lib/python3.10/subprocess.py:1959: in _wait
    (pid, sts) = self._try_wait(0)
/usr/local/lib/python3.10/subprocess.py:1917: in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
E   Failed: Timeout >90.0s
------------------------------------------------------------------------------------------ Captured stdout call ------------------------------------------------------------------------------------------
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:31:06.561+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler

 -------------- celery@947a95031c2d v5.5.3 (immunity)
--- ***** -----
-- ******* ---- Linux-6.8.0-1029-azure-x86_64-with-glibc2.36 2025-07-05 10:31:06
- *** --- * ---
- ** ---------- [config]
- ** ---------- .> app:         airflow.providers.celery.executors.celery_executor:0x7fae5bf96260
- ** ---------- .> transport:   redis://redis:6379/0
- ** ---------- .> results:     ***postgres/airflow
- *** --- * --- .> concurrency: 1 (prefork)
-- ******* ---- .> task events: OFF (enable -E to monitor tasks in this worker)
--- ***** -----
 -------------- [queues]
                .> default          exchange=default(direct) key=default


[tasks]
  . execute_workload

[2025-07-05T10:31:06.695+0000] {connection.py:22} INFO - Connected to redis://redis:6379/0
[2025-07-05T10:31:06.700+0000] {mingle.py:40} INFO - mingle: searching for neighbors
[2025-07-05T10:31:06.785+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:31:06.785+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:31:06.948+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:31:06.949+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:31:06.949+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used
[2025-07-05T10:31:07.709+0000] {mingle.py:49} INFO - mingle: all alone
[2025-07-05T10:31:07.720+0000] {worker.py:176} INFO - celery@947a95031c2d ready.
No paused DAGs were found
     |                     |                     | data_interval_star |                     |          | last_scheduling_de |                     |          |            |        | triggering_user_nam
conf | dag_id              | dag_run_id          | t                  | data_interval_end   | end_date | cision             | logical_date        | run_type | start_date | state  | e
=====+=====================+=====================+====================+=====================+==========+====================+=====================+==========+============+========+====================
{}   | otel_test_dag_with_ | manual__2025-07-05T | 2025-07-05         | 2025-07-05          | None     | None               | 2025-07-05          | manual   | None       | queued | root
     | pause_between_tasks | 10:31:14.196075+00: | 10:31:18.847354+00 | 10:31:18.847354+00: |          |                    | 10:31:14+00:00      |          |            |        |
     |                     | 00                  | :00                | 00                  |          |                    |                     |          |            |        |

[2025-07-05T10:31:19.895+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:31:19.896+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:31:19.909+0000] {scheduler_job_runner.py:453} INFO - 1 tasks up for execution:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.task1 manual__2025-07-05T10:31:14.196075+00:00 [scheduled]>
[2025-07-05T10:31:19.909+0000] {scheduler_job_runner.py:525} INFO - DAG otel_test_dag_with_pause_between_tasks has 0/16 running and queued tasks
[2025-07-05T10:31:19.910+0000] {scheduler_job_runner.py:664} INFO - Setting the following tasks to queued state:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.task1 manual__2025-07-05T10:31:14.196075+00:00 [scheduled]>
[2025-07-05T10:31:19.911+0000] {scheduler_job_runner.py:749} INFO - Trying to enqueue tasks: [<TaskInstance: otel_test_dag_with_pause_between_tasks.task1 manual__2025-07-05T10:31:14.196075+00:00 [scheduled]>] for executor: CeleryExecutor(parallelism=32)
[2025-07-05T10:31:19.916+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:31:19.917+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:31:20.243+0000] {strategy.py:161} INFO - Task execute_workload[891a54b8-043a-426e-bd41-9400867e5eb8] received
[2025-07-05T10:31:20.251+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state queued for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='task1', run_id='manual__2025-07-05T10:31:14.196075+00:00', try_number=1, map_index=-1)
[2025-07-05T10:31:20.261+0000] {scheduler_job_runner.py:824} INFO - Setting external_id for <TaskInstance: otel_test_dag_with_pause_between_tasks.task1 manual__2025-07-05T10:31:14.196075+00:00 [queued]> to 891a54b8-043a-426e-bd41-9400867e5eb8
Control file not found. Waiting...
[2025-07-05T10:31:21.900+0000] {celery_executor_utils.py:162} INFO - [891a54b8-043a-426e-bd41-9400867e5eb8] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da23-f7a5-7688-9fe6-306fb12fab15'), task_id='task1', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:31:14.196075+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=3, executor_config=None, parent_context_carrier={'traceparent': '00-2205ad6468c3f22a6bdc91c94ff3e374-ed82ac62bf9e4081-01'}, context_carrier={'traceparent': '00-2205ad6468c3f22a6bdc91c94ff3e374-67eba54e3814e201-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:31:14.196075+00:00/task_id=task1/attempt=1.log' type='ExecuteTask'
2025-07-05 10:31:21 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:31:21.957+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da23-f7a5-7688-9fe6-306fb12fab15/run "HTTP/1.1 200 OK"
2025-07-05 10:31:21 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da23-f7a5-7688-9fe6-306fb12fab15'), task_id='task1', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:31:14.196075+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=3, executor_config=None, parent_context_carrier={'traceparent': '00-2205ad6468c3f22a6bdc91c94ff3e374-ed82ac62bf9e4081-01'}, context_carrier={'traceparent': '00-2205ad6468c3f22a6bdc91c94ff3e374-67eba54e3814e201-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 31, 21, 933586, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:31:14.196075+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 31, 14, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 31, 18, 847354, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 31, 18, 847354, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 31, 18, 847354, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 31, 19, 877792, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:31:22.344+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da23-f7a5-7688-9fe6-306fb12fab15/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:31:22 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:31:22.492+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da23-f7a5-7688-9fe6-306fb12fab15/rtif "HTTP/1.1 201 Created"
2025-07-05 10:31:22 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 31, 22, 571158, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:31:22.587+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da23-f7a5-7688-9fe6-306fb12fab15/state "HTTP/1.1 204 No Content"
2025-07-05 10:31:22 [info     ] Task finished                  [supervisor] duration=0.6733403810000027 exit_code=0 final_state=success
[2025-07-05T10:31:22.601+0000] {trace.py:128} INFO - Task execute_workload[891a54b8-043a-426e-bd41-9400867e5eb8] succeeded in 2.356894908999948s: None
[2025-07-05T10:31:22.866+0000] {scheduler_job_runner.py:453} INFO - 1 tasks up for execution:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:31:14.196075+00:00 [scheduled]>
[2025-07-05T10:31:22.866+0000] {scheduler_job_runner.py:525} INFO - DAG otel_test_dag_with_pause_between_tasks has 0/16 running and queued tasks
[2025-07-05T10:31:22.866+0000] {scheduler_job_runner.py:664} INFO - Setting the following tasks to queued state:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:31:14.196075+00:00 [scheduled]>
[2025-07-05T10:31:22.867+0000] {scheduler_job_runner.py:749} INFO - Trying to enqueue tasks: [<TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:31:14.196075+00:00 [scheduled]>] for executor: CeleryExecutor(parallelism=32)
[2025-07-05T10:31:22.868+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:31:22.869+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:31:22.871+0000] {strategy.py:161} INFO - Task execute_workload[3021eb6f-2817-4d2a-a021-852583358d67] received
[2025-07-05T10:31:22.876+0000] {celery_executor_utils.py:162} INFO - [3021eb6f-2817-4d2a-a021-852583358d67] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da23-f7a6-7c0e-b5b3-4502c95bba0a'), task_id='paused_task', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:31:14.196075+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-2205ad6468c3f22a6bdc91c94ff3e374-ed82ac62bf9e4081-01'}, context_carrier={'traceparent': '00-2205ad6468c3f22a6bdc91c94ff3e374-0f0391328ba9d0c9-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:31:14.196075+00:00/task_id=paused_task/attempt=1.log' type='ExecuteTask'
[2025-07-05T10:31:22.878+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state queued for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='paused_task', run_id='manual__2025-07-05T10:31:14.196075+00:00', try_number=1, map_index=-1)
[2025-07-05T10:31:22.878+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state success for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='task1', run_id='manual__2025-07-05T10:31:14.196075+00:00', try_number=1, map_index=-1)
[2025-07-05T10:31:22.881+0000] {scheduler_job_runner.py:824} INFO - Setting external_id for <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:31:14.196075+00:00 [queued]> to 3021eb6f-2817-4d2a-a021-852583358d67
[2025-07-05T10:31:22.882+0000] {scheduler_job_runner.py:834} INFO - TaskInstance Finished: dag_id=otel_test_dag_with_pause_between_tasks, task_id=task1, run_id=manual__2025-07-05T10:31:14.196075+00:00, map_index=-1, run_start_date=2025-07-05 10:31:21.933586+00:00, run_end_date=2025-07-05 10:31:22.571158+00:00, run_duration=0.637572, state=success, executor=CeleryExecutor(parallelism=32), executor_state=success, try_number=1, max_tries=0, pool=default_pool, queue=default, priority_weight=3, operator=_PythonDecoratedOperator, queued_dttm=2025-07-05 10:31:19.910564+00:00, scheduled_dttm=2025-07-05 10:31:19.897283+00:00,queued_by_job_id=3, pid=214
2025-07-05 10:31:22 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:31:22.924+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da23-f7a6-7c0e-b5b3-4502c95bba0a/run "HTTP/1.1 200 OK"
2025-07-05 10:31:22 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da23-f7a6-7c0e-b5b3-4502c95bba0a'), task_id='paused_task', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:31:14.196075+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-2205ad6468c3f22a6bdc91c94ff3e374-ed82ac62bf9e4081-01'}, context_carrier={'traceparent': '00-2205ad6468c3f22a6bdc91c94ff3e374-0f0391328ba9d0c9-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 31, 22, 907261, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:31:14.196075+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 31, 14, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 31, 18, 847354, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 31, 18, 847354, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 31, 18, 847354, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 31, 19, 877792, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={'task1': None}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:31:23.308+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da23-f7a6-7c0e-b5b3-4502c95bba0a/heartbeat "HTTP/1.1 204 No Content"
Control file not found. Waiting...
2025-07-05 10:31:23 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:31:23.459+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da23-f7a6-7c0e-b5b3-4502c95bba0a/rtif "HTTP/1.1 201 Created"
{
    "name": "task1",
    "context": {
        "trace_id": "0x2205ad6468c3f22a6bdc91c94ff3e374",
        "span_id": "0x67eba54e3814e201",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xed82ac62bf9e4081",
    "start_time": "2025-07-05T10:31:19.917678Z",
    "end_time": "2025-07-05T10:31:22.571158Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "airflow.category": "scheduler",
        "airflow.task.id": "0197da23-f7a5-7688-9fe6-306fb12fab15",
        "airflow.task.task_id": "task1",
        "airflow.task.dag_id": "otel_test_dag_with_pause_between_tasks",
        "airflow.task.state": "success",
        "airflow.task.error": false,
        "airflow.task.start_date": "2025-07-05 10:31:21.933586+00:00",
        "airflow.task.end_date": "2025-07-05 10:31:22.571158+00:00",
        "airflow.task.duration": 0.637572,
        "airflow.task.executor_config": "{}",
        "airflow.task.logical_date": "2025-07-05 10:31:14+00:00",
        "airflow.task.hostname": "947a95031c2d",
        "airflow.task.log_url": "http://localhost:8080/dags/otel_test_dag_with_pause_between_tasks/runs/manual__2025-07-05T10%3A31%3A14.196075%2B00%3A00/tasks/task1?try_number=1",
        "airflow.task.operator": "_PythonDecoratedOperator",
        "airflow.task.try_number": 1,
        "airflow.task.executor_state": "success",
        "airflow.task.pool": "default_pool",
        "airflow.task.queue": "default",
        "airflow.task.priority_weight": 3,
        "airflow.task.queued_dttm": "2025-07-05 10:31:19.910564+00:00",
        "airflow.task.queued_by_job_id": 3,
        "airflow.task.pid": 214
    },
    "events": [
        {
            "name": "airflow.task.queued",
            "timestamp": "2025-07-05T10:31:19.910564Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.started",
            "timestamp": "2025-07-05T10:31:21.933586Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.ended",
            "timestamp": "2025-07-05T10:31:22.571158Z",
            "attributes": {}
        }
    ],
    "links": [
        {
            "context": {
                "trace_id": "0x2205ad6468c3f22a6bdc91c94ff3e374",
                "span_id": "0xed82ac62bf9e4081",
                "trace_state": "[]"
            },
            "attributes": {
                "meta.annotation_type": "link",
                "from": "parenttrace"
            }
        }
    ],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.27.0",
            "host.name": "947a95031c2d",
            "service.name": "Airflow"
        },
        "schema_url": ""
    }
}
[2025-07-05T10:31:26.319+0000] {test_otel.py:904} INFO - Control file exists and the task has been paused.
2025-07-05 10:31:26 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 31, 26, 466709, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:31:26.478+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da23-f7a6-7c0e-b5b3-4502c95bba0a/state "HTTP/1.1 204 No Content"
2025-07-05 10:31:26 [info     ] Task finished                  [supervisor] duration=3.591456626999957 exit_code=0 final_state=success
[2025-07-05T10:31:26.496+0000] {trace.py:128} INFO - Task execute_workload[3021eb6f-2817-4d2a-a021-852583358d67] succeeded in 3.6238700799999606s: None
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:31:31.731+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:31:31.943+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:31:31.943+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:31:31.946+0000] {scheduler_job_runner.py:2153} INFO - Marked 1 SchedulerJob instances as failed
[2025-07-05T10:31:32.102+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:31:32.102+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:31:32.103+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used
[2025-07-05T10:31:32.167+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:31:32.168+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:31:32.172+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:31:32.172+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:31:32.173+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:31:32.173+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:31:32.196+0000] {scheduler_job_runner.py:453} INFO - 1 tasks up for execution:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.task2 manual__2025-07-05T10:31:14.196075+00:00 [scheduled]>
[2025-07-05T10:31:32.196+0000] {scheduler_job_runner.py:525} INFO - DAG otel_test_dag_with_pause_between_tasks has 0/16 running and queued tasks
[2025-07-05T10:31:32.196+0000] {scheduler_job_runner.py:664} INFO - Setting the following tasks to queued state:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.task2 manual__2025-07-05T10:31:14.196075+00:00 [scheduled]>
[2025-07-05T10:31:32.198+0000] {scheduler_job_runner.py:749} INFO - Trying to enqueue tasks: [<TaskInstance: otel_test_dag_with_pause_between_tasks.task2 manual__2025-07-05T10:31:14.196075+00:00 [scheduled]>] for executor: CeleryExecutor(parallelism=32)
[2025-07-05T10:31:32.203+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:31:32.204+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:31:32.499+0000] {strategy.py:161} INFO - Task execute_workload[f4cb8c3d-f472-444b-9ec1-70d3fa88a92b] received
[2025-07-05T10:31:32.505+0000] {celery_executor_utils.py:162} INFO - [f4cb8c3d-f472-444b-9ec1-70d3fa88a92b] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da23-f7a7-79f6-94d9-b588737aff57'), task_id='task2', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:31:14.196075+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-8c2b5d790ee592b1bdba5d4449977411-92b4325228dd755e-01'}, context_carrier={'traceparent': '00-8c2b5d790ee592b1bdba5d4449977411-ccd20c238b335172-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:31:14.196075+00:00/task_id=task2/attempt=1.log' type='ExecuteTask'
[2025-07-05T10:31:32.508+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state queued for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='task2', run_id='manual__2025-07-05T10:31:14.196075+00:00', try_number=1, map_index=-1)
[2025-07-05T10:31:32.519+0000] {scheduler_job_runner.py:824} INFO - Setting external_id for <TaskInstance: otel_test_dag_with_pause_between_tasks.task2 manual__2025-07-05T10:31:14.196075+00:00 [queued]> to f4cb8c3d-f472-444b-9ec1-70d3fa88a92b
2025-07-05 10:31:32 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:31:32.565+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da23-f7a7-79f6-94d9-b588737aff57/run "HTTP/1.1 200 OK"
2025-07-05 10:31:32 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da23-f7a7-79f6-94d9-b588737aff57'), task_id='task2', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:31:14.196075+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-8c2b5d790ee592b1bdba5d4449977411-92b4325228dd755e-01'}, context_carrier={'traceparent': '00-8c2b5d790ee592b1bdba5d4449977411-ccd20c238b335172-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 31, 32, 545912, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:31:14.196075+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 31, 14, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 31, 18, 847354, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 31, 18, 847354, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 31, 18, 847354, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 31, 19, 877792, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={'paused_task': None}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:31:32.943+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da23-f7a7-79f6-94d9-b588737aff57/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:31:33 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:31:33.093+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da23-f7a7-79f6-94d9-b588737aff57/rtif "HTTP/1.1 201 Created"
2025-07-05 10:31:33 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 31, 33, 98184, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:31:33.107+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da23-f7a7-79f6-94d9-b588737aff57/state "HTTP/1.1 204 No Content"
2025-07-05 10:31:33 [info     ] Task finished                  [supervisor] duration=0.5774833180000769 exit_code=0 final_state=success
[2025-07-05T10:31:33.120+0000] {trace.py:128} INFO - Task execute_workload[f4cb8c3d-f472-444b-9ec1-70d3fa88a92b] succeeded in 0.6201746450000201s: None
[2025-07-05T10:31:33.572+0000] {dagrun.py:1203} INFO - Marking run <DagRun otel_test_dag_with_pause_between_tasks @ 2025-07-05 10:31:14+00:00: manual__2025-07-05T10:31:14.196075+00:00, state:running, queued_at: 2025-07-05 10:31:19.703141+00:00. run_type: manual> successful
[2025-07-05T10:31:33.573+0000] {dagrun.py:1253} INFO - DagRun Finished: dag_id=otel_test_dag_with_pause_between_tasks, logical_date=2025-07-05 10:31:14+00:00, run_id=manual__2025-07-05T10:31:14.196075+00:00, run_start_date=2025-07-05 10:31:19.877792+00:00, run_end_date=2025-07-05 10:31:33.573047+00:00, run_duration=13.695255, state=success, run_type=manual, data_interval_start=2025-07-05 10:31:18.847354+00:00, data_interval_end=2025-07-05 10:31:18.847354+00:00,
[2025-07-05T10:31:33.586+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state success for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='task2', run_id='manual__2025-07-05T10:31:14.196075+00:00', try_number=1, map_index=-1)
[2025-07-05T10:31:33.589+0000] {scheduler_job_runner.py:834} INFO - TaskInstance Finished: dag_id=otel_test_dag_with_pause_between_tasks, task_id=task2, run_id=manual__2025-07-05T10:31:14.196075+00:00, map_index=-1, run_start_date=2025-07-05 10:31:32.545912+00:00, run_end_date=2025-07-05 10:31:33.098184+00:00, run_duration=0.552272, state=success, executor=CeleryExecutor(parallelism=32), executor_state=success, try_number=1, max_tries=0, pool=default_pool, queue=default, priority_weight=1, operator=_PythonDecoratedOperator, queued_dttm=2025-07-05 10:31:32.197192+00:00, scheduled_dttm=2025-07-05 10:31:32.178706+00:00,queued_by_job_id=4, pid=231

worker: Warm shutdown (MainProcess)
{
    "name": "otel_test_dag_with_pause_between_tasks_recreated",
    "context": {
        "trace_id": "0x8c2b5d790ee592b1bdba5d4449977411",
        "span_id": "0x92b4325228dd755e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": null,
    "start_time": "2025-07-05T10:31:19.703141Z",
    "end_time": "2025-07-05T10:31:33.573047Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "airflow.category": "DAG runs",
        "airflow.dag_run.dag_id": "otel_test_dag_with_pause_between_tasks",
        "airflow.dag_run.logical_date": "2025-07-05 10:31:14+00:00",
        "airflow.dag_run.run_id": "manual__2025-07-05T10:31:14.196075+00:00",
        "airflow.dag_run.queued_at": "2025-07-05 10:31:19.703141+00:00",
        "airflow.dag_run.run_start_date": "2025-07-05 10:31:19.877792+00:00",
        "airflow.dag_run.run_end_date": "2025-07-05 10:31:33.573047+00:00",
        "airflow.dag_run.run_duration": "13.695255",
        "airflow.dag_run.state": "success",
        "airflow.dag_run.run_type": "manual",
        "airflow.dag_run.data_interval_start": "2025-07-05 10:31:18.847354+00:00",
        "airflow.dag_run.data_interval_end": "2025-07-05 10:31:18.847354+00:00",
        "airflow.dag_run.conf": "{}"
    },
    "events": [
        {
            "name": "airflow.dag_run.queued",
            "timestamp": "2025-07-05T10:31:19.703141Z",
            "attributes": {}
        },
        {
            "name": "airflow.dag_run.started",
            "timestamp": "2025-07-05T10:31:19.877792Z",
            "attributes": {}
        },
        {
            "name": "airflow.dag_run.ended",
            "timestamp": "2025-07-05T10:31:33.573047Z",
            "attributes": {}
        }
    ],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.27.0",
            "host.name": "947a95031c2d",
            "service.name": "Airflow"
        },
        "schema_url": ""
    }
}
{
    "name": "paused_task_recreated",
    "context": {
        "trace_id": "0x8c2b5d790ee592b1bdba5d4449977411",
        "span_id": "0xec6636ea9f04cda1",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x92b4325228dd755e",
    "start_time": "2025-07-05T10:31:22.867066Z",
    "end_time": "2025-07-05T10:31:26.466709Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "airflow.category": "scheduler",
        "airflow.task.id": "0197da23-f7a6-7c0e-b5b3-4502c95bba0a",
        "airflow.task.task_id": "paused_task",
        "airflow.task.dag_id": "otel_test_dag_with_pause_between_tasks",
        "airflow.task.state": "success",
        "airflow.task.error": false,
        "airflow.task.start_date": "2025-07-05 10:31:22.907261+00:00",
        "airflow.task.end_date": "2025-07-05 10:31:26.466709+00:00",
        "airflow.task.duration": 3.559448,
        "airflow.task.executor_config": "{}",
        "airflow.task.logical_date": "2025-07-05 10:31:14+00:00",
        "airflow.task.hostname": "947a95031c2d",
        "airflow.task.log_url": "http://localhost:8080/dags/otel_test_dag_with_pause_between_tasks/runs/manual__2025-07-05T10%3A31%3A14.196075%2B00%3A00/tasks/paused_task?try_number=1",
        "airflow.task.operator": "_PythonDecoratedOperator",
        "airflow.task.try_number": 1,
        "airflow.task.executor_state": "success",
        "airflow.task.pool": "default_pool",
        "airflow.task.queue": "default",
        "airflow.task.priority_weight": 2,
        "airflow.task.queued_dttm": "2025-07-05 10:31:22.867066+00:00",
        "airflow.task.queued_by_job_id": 3,
        "airflow.task.pid": 219
    },
    "events": [
        {
            "name": "airflow.task.queued",
            "timestamp": "2025-07-05T10:31:22.867066Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.started",
            "timestamp": "2025-07-05T10:31:22.907261Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.ended",
            "timestamp": "2025-07-05T10:31:26.466709Z",
            "attributes": {}
        }
    ],
    "links": [
        {
            "context": {
                "trace_id": "0x8c2b5d790ee592b1bdba5d4449977411",
                "span_id": "0x92b4325228dd755e",
                "trace_state": "[]"
            },
            "attributes": {
                "meta.annotation_type": "link",
                "from": "parenttrace"
            }
        }
    ],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.27.0",
            "host.name": "947a95031c2d",
            "service.name": "Airflow"
        },
        "schema_url": ""
    }
}
{
    "name": "task1_recreated",
    "context": {
        "trace_id": "0x8c2b5d790ee592b1bdba5d4449977411",
        "span_id": "0xbbb6d59896b130ec",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x92b4325228dd755e",
    "start_time": "2025-07-05T10:31:19.910564Z",
    "end_time": "2025-07-05T10:31:22.571158Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "airflow.category": "scheduler",
        "airflow.task.id": "0197da23-f7a5-7688-9fe6-306fb12fab15",
        "airflow.task.task_id": "task1",
        "airflow.task.dag_id": "otel_test_dag_with_pause_between_tasks",
        "airflow.task.state": "success",
        "airflow.task.error": false,
        "airflow.task.start_date": "2025-07-05 10:31:21.933586+00:00",
        "airflow.task.end_date": "2025-07-05 10:31:22.571158+00:00",
        "airflow.task.duration": 0.637572,
        "airflow.task.executor_config": "{}",
        "airflow.task.logical_date": "2025-07-05 10:31:14+00:00",
        "airflow.task.hostname": "947a95031c2d",
        "airflow.task.log_url": "http://localhost:8080/dags/otel_test_dag_with_pause_between_tasks/runs/manual__2025-07-05T10%3A31%3A14.196075%2B00%3A00/tasks/task1?try_number=1",
        "airflow.task.operator": "_PythonDecoratedOperator",
        "airflow.task.try_number": 1,
        "airflow.task.executor_state": "success",
        "airflow.task.pool": "default_pool",
        "airflow.task.queue": "default",
        "airflow.task.priority_weight": 3,
        "airflow.task.queued_dttm": "2025-07-05 10:31:19.910564+00:00",
        "airflow.task.queued_by_job_id": 3,
        "airflow.task.pid": 214
    },
    "events": [
        {
            "name": "airflow.task.queued",
            "timestamp": "2025-07-05T10:31:19.910564Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.started",
            "timestamp": "2025-07-05T10:31:21.933586Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.ended",
            "timestamp": "2025-07-05T10:31:22.571158Z",
            "attributes": {}
        }
    ],
    "links": [
        {
            "context": {
                "trace_id": "0x8c2b5d790ee592b1bdba5d4449977411",
                "span_id": "0x92b4325228dd755e",
                "trace_state": "[]"
            },
            "attributes": {
                "meta.annotation_type": "link",
                "from": "parenttrace"
            }
        }
    ],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.27.0",
            "host.name": "947a95031c2d",
            "service.name": "Airflow"
        },
        "schema_url": ""
    }
}
{
    "name": "task2",
    "context": {
        "trace_id": "0x8c2b5d790ee592b1bdba5d4449977411",
        "span_id": "0xccd20c238b335172",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x92b4325228dd755e",
    "start_time": "2025-07-05T10:31:32.204504Z",
    "end_time": "2025-07-05T10:31:33.098184Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "airflow.category": "scheduler",
        "airflow.task.id": "0197da23-f7a7-79f6-94d9-b588737aff57",
        "airflow.task.task_id": "task2",
        "airflow.task.dag_id": "otel_test_dag_with_pause_between_tasks",
        "airflow.task.state": "success",
        "airflow.task.error": false,
        "airflow.task.start_date": "2025-07-05 10:31:32.545912+00:00",
        "airflow.task.end_date": "2025-07-05 10:31:33.098184+00:00",
        "airflow.task.duration": 0.552272,
        "airflow.task.executor_config": "{}",
        "airflow.task.logical_date": "2025-07-05 10:31:14+00:00",
        "airflow.task.hostname": "947a95031c2d",
        "airflow.task.log_url": "http://localhost:8080/dags/otel_test_dag_with_pause_between_tasks/runs/manual__2025-07-05T10%3A31%3A14.196075%2B00%3A00/tasks/task2?try_number=1",
        "airflow.task.operator": "_PythonDecoratedOperator",
        "airflow.task.try_number": 1,
        "airflow.task.executor_state": "success",
        "airflow.task.pool": "default_pool",
        "airflow.task.queue": "default",
        "airflow.task.priority_weight": 1,
        "airflow.task.queued_dttm": "2025-07-05 10:31:32.197192+00:00",
        "airflow.task.queued_by_job_id": 4,
        "airflow.task.pid": 231
    },
    "events": [
        {
            "name": "airflow.task.queued",
            "timestamp": "2025-07-05T10:31:32.197192Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.started",
            "timestamp": "2025-07-05T10:31:32.545912Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.ended",
            "timestamp": "2025-07-05T10:31:33.098184Z",
            "attributes": {}
        }
    ],
    "links": [
        {
            "context": {
                "trace_id": "0x8c2b5d790ee592b1bdba5d4449977411",
                "span_id": "0x92b4325228dd755e",
                "trace_state": "[]"
            },
            "attributes": {
                "meta.annotation_type": "link",
                "from": "parenttrace"
            }
        }
    ],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.27.0",
            "host.name": "947a95031c2d",
            "service.name": "Airflow"
        },
        "schema_url": ""
    }
}
------------------------------------------------------------------------------------------ Captured stderr call ------------------------------------------------------------------------------------------
/usr/local/lib/python3.10/site-packages/celery/platforms.py:841 SecurityWarning: You're running the worker with superuser privileges: this is
absolutely not recommended!

Please specify a different user using the --uid option.

User information: uid=0 euid=0 gid=0 egid=0

------------------------------------------------------------------------------------------- Captured log call --------------------------------------------------------------------------------------------
INFO     integration.otel.test_otel:test_otel.py:904 Control file exists and the task has been paused.
__________________________________________________________ TestOtelIntegration.test_scheduler_exits_gracefully_in_the_middle_of_the_first_task ___________________________________________________________
airflow-core/tests/integration/otel/test_otel.py:1037: in test_scheduler_exits_gracefully_in_the_middle_of_the_first_task
    check_dag_run_state_and_span_status(
airflow-core/tests/integration/otel/test_otel.py:131: in check_dag_run_state_and_span_status
    assert dag_run.span_status == span_status, (
E   AssertionError: Dag Run span_status isn't needs_continuance. Span_status: active
E   assert equals failed
E     'active'                                             <SpanStatus.NEEDS_CONTINUANCE: 'needs_continuance'>

During handling of the above exception, another exception occurred:
airflow-core/tests/integration/otel/test_otel.py:1067: in test_scheduler_exits_gracefully_in_the_middle_of_the_first_task
    celery_worker_process.wait()
/usr/local/lib/python3.10/subprocess.py:1209: in wait
    return self._wait(timeout=timeout)
/usr/local/lib/python3.10/subprocess.py:1959: in _wait
    (pid, sts) = self._try_wait(0)
/usr/local/lib/python3.10/subprocess.py:1917: in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
E   Failed: Timeout >90.0s
------------------------------------------------------------------------------------------ Captured stdout call ------------------------------------------------------------------------------------------
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:32:36.550+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:32:36.770+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:32:36.771+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:32:36.933+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:32:36.934+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:32:36.934+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used

 -------------- celery@947a95031c2d v5.5.3 (immunity)
--- ***** -----
-- ******* ---- Linux-6.8.0-1029-azure-x86_64-with-glibc2.36 2025-07-05 10:32:37
- *** --- * ---
- ** ---------- [config]
- ** ---------- .> app:         airflow.providers.celery.executors.celery_executor:0x7fd4f196c7f0
- ** ---------- .> transport:   redis://redis:6379/0
- ** ---------- .> results:     ***postgres/airflow
- *** --- * --- .> concurrency: 1 (prefork)
-- ******* ---- .> task events: OFF (enable -E to monitor tasks in this worker)
--- ***** -----
 -------------- [queues]
                .> default          exchange=default(direct) key=default


[tasks]
  . execute_workload

[2025-07-05T10:32:37.258+0000] {connection.py:22} INFO - Connected to redis://redis:6379/0
[2025-07-05T10:32:37.262+0000] {mingle.py:40} INFO - mingle: searching for neighbors
[2025-07-05T10:32:38.270+0000] {mingle.py:49} INFO - mingle: all alone
[2025-07-05T10:32:38.280+0000] {worker.py:176} INFO - celery@947a95031c2d ready.
No paused DAGs were found
     |                     |                     | data_interval_star |                     |          | last_scheduling_de |                     |          |            |        | triggering_user_nam
conf | dag_id              | dag_run_id          | t                  | data_interval_end   | end_date | cision             | logical_date        | run_type | start_date | state  | e
=====+=====================+=====================+====================+=====================+==========+====================+=====================+==========+============+========+====================
{}   | otel_test_dag_with_ | manual__2025-07-05T | 2025-07-05         | 2025-07-05          | None     | None               | 2025-07-05          | manual   | None       | queued | root
     | pause_in_task       | 10:32:44.543610+00: | 10:32:49.218626+00 | 10:32:49.218626+00: |          |                    | 10:32:44+00:00      |          |            |        |
     |                     | 00                  | :00                | 00                  |          |                    |                     |          |            |        |

[2025-07-05T10:32:50.313+0000] {strategy.py:161} INFO - Task execute_workload[571df7c4-4426-4f6c-bc58-878639a94fa8] received
Control file not found. Waiting...
[2025-07-05T10:32:51.957+0000] {celery_executor_utils.py:162} INFO - [571df7c4-4426-4f6c-bc58-878639a94fa8] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da25-58b2-77d6-980e-f8fd6bbe1b6f'), task_id='task1', dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:32:44.543610+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-ecbc923368203164a6577f4279ab125d-eb1f663fd40c2c38-01'}, context_carrier={'traceparent': '00-ecbc923368203164a6577f4279ab125d-370b48f2c451fc01-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_in_task.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_in_task/run_id=manual__2025-07-05T10:32:44.543610+00:00/task_id=task1/attempt=1.log' type='ExecuteTask'
2025-07-05 10:32:51 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:32:52.012+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/run "HTTP/1.1 200 OK"
2025-07-05 10:32:52 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da25-58b2-77d6-980e-f8fd6bbe1b6f'), task_id='task1', dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:32:44.543610+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-ecbc923368203164a6577f4279ab125d-eb1f663fd40c2c38-01'}, context_carrier={'traceparent': '00-ecbc923368203164a6577f4279ab125d-370b48f2c451fc01-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_in_task.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 32, 51, 989540, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:32:44.543610+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 32, 44, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 32, 49, 218626, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 32, 49, 218626, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 32, 49, 218626, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 32, 50, 284356, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:32:52.402+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:32:52 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:32:52.551+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/rtif "HTTP/1.1 201 Created"
[2025-07-05T10:32:53.631+0000] {test_otel.py:1021} INFO - Control file exists and the task has been paused.
[2025-07-05T10:32:53.632+0000] {scheduler_job_runner.py:290} INFO - Exiting gracefully upon receiving signal 15
[2025-07-05T10:32:53.633+0000] {scheduler_job_runner.py:1011} INFO - Exited execute loop

worker: Warm shutdown (MainProcess)
[2025-07-05T10:32:57.568+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:33:02.575+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:33:07.582+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:33:12.588+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:33:17.595+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:33:22.601+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:33:27.608+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:33:32.615+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:33:37.621+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:33:42.627+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:33:47.634+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:33:52.640+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:33:57.647+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da25-58b2-77d6-980e-f8fd6bbe1b6f/heartbeat "HTTP/1.1 204 No Content"
------------------------------------------------------------------------------------------ Captured stderr call ------------------------------------------------------------------------------------------
/usr/local/lib/python3.10/site-packages/celery/platforms.py:841 SecurityWarning: You're running the worker with superuser privileges: this is
absolutely not recommended!

Please specify a different user using the --uid option.

User information: uid=0 euid=0 gid=0 egid=0

------------------------------------------------------------------------------------------- Captured log call --------------------------------------------------------------------------------------------
INFO     integration.otel.test_otel:test_otel.py:1021 Control file exists and the task has been paused.
__________________________________________________________ TestOtelIntegration.test_scheduler_exits_forcefully_in_the_middle_of_the_first_task ___________________________________________________________
airflow-core/tests/integration/otel/test_otel.py:1157: in test_scheduler_exits_forcefully_in_the_middle_of_the_first_task
    wait_for_dag_run_and_check_span_status(
airflow-core/tests/integration/otel/test_otel.py:114: in wait_for_dag_run_and_check_span_status
    assert dag_run_span_status == span_status, (
E   AssertionError: Dag run span status isn't ended as expected.Actual status: should_end.
E   assert equals failed
E     'should_end'                 <SpanStatus.ENDED: 'ended'>
------------------------------------------------------------------------------------------ Captured stdout call ------------------------------------------------------------------------------------------
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:34:05.314+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:34:05.550+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:34:05.551+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:34:05.724+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:34:05.725+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:34:05.726+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used
[2025-07-05T10:34:05.797+0000] {dagrun.py:1174} INFO - Marking run <DagRun otel_test_dag_with_pause_in_task @ 2025-07-05 10:32:44+00:00: manual__2025-07-05T10:32:44.543610+00:00, state:running, queued_at: 2025-07-05 10:32:50.085053+00:00. run_type: manual> failed
[2025-07-05T10:34:05.798+0000] {dagrun.py:1253} INFO - DagRun Finished: dag_id=otel_test_dag_with_pause_in_task, logical_date=2025-07-05 10:32:44+00:00, run_id=manual__2025-07-05T10:32:44.543610+00:00, run_start_date=2025-07-05 10:32:50.284356+00:00, run_end_date=2025-07-05 10:34:05.798000+00:00, run_duration=75.513644, state=failed, run_type=manual, data_interval_start=2025-07-05 10:32:49.218626+00:00, data_interval_end=2025-07-05 10:32:49.218626+00:00,

 -------------- celery@947a95031c2d v5.5.3 (immunity)
--- ***** -----
-- ******* ---- Linux-6.8.0-1029-azure-x86_64-with-glibc2.36 2025-07-05 10:34:07
- *** --- * ---
- ** ---------- [config]
- ** ---------- .> app:         airflow.providers.celery.executors.celery_executor:0x7f28ec1e81f0
- ** ---------- .> transport:   redis://redis:6379/0
- ** ---------- .> results:     ***postgres/airflow
- *** --- * --- .> concurrency: 1 (prefork)
-- ******* ---- .> task events: OFF (enable -E to monitor tasks in this worker)
--- ***** -----
 -------------- [queues]
                .> default          exchange=default(direct) key=default


[tasks]
  . execute_workload

[2025-07-05T10:34:07.514+0000] {connection.py:22} INFO - Connected to redis://redis:6379/0
[2025-07-05T10:34:07.519+0000] {mingle.py:40} INFO - mingle: searching for neighbors
[2025-07-05T10:34:08.526+0000] {mingle.py:49} INFO - mingle: all alone
[2025-07-05T10:34:08.535+0000] {worker.py:176} INFO - celery@947a95031c2d ready.
No paused DAGs were found
     |                     |                     | data_interval_star |                     |          | last_scheduling_de |                     |          |            |        | triggering_user_nam
conf | dag_id              | dag_run_id          | t                  | data_interval_end   | end_date | cision             | logical_date        | run_type | start_date | state  | e
=====+=====================+=====================+====================+=====================+==========+====================+=====================+==========+============+========+====================
{}   | otel_test_dag_with_ | manual__2025-07-05T | 2025-07-05         | 2025-07-05          | None     | None               | 2025-07-05          | manual   | None       | queued | root
     | pause_in_task       | 10:34:14.526107+00: | 10:34:19.151067+00 | 10:34:19.151067+00: |          |                    | 10:34:14+00:00      |          |            |        |
     |                     | 00                  | :00                | 00                  |          |                    |                     |          |            |        |

Control file not found. Waiting...
[2025-07-05T10:34:20.584+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:34:20.584+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:34:20.594+0000] {scheduler_job_runner.py:453} INFO - 1 tasks up for execution:
    <TaskInstance: otel_test_dag_with_pause_in_task.task1 manual__2025-07-05T10:34:14.526107+00:00 [scheduled]>
[2025-07-05T10:34:20.594+0000] {scheduler_job_runner.py:525} INFO - DAG otel_test_dag_with_pause_in_task has 0/16 running and queued tasks
[2025-07-05T10:34:20.595+0000] {scheduler_job_runner.py:664} INFO - Setting the following tasks to queued state:
    <TaskInstance: otel_test_dag_with_pause_in_task.task1 manual__2025-07-05T10:34:14.526107+00:00 [scheduled]>
[2025-07-05T10:34:20.596+0000] {scheduler_job_runner.py:749} INFO - Trying to enqueue tasks: [<TaskInstance: otel_test_dag_with_pause_in_task.task1 manual__2025-07-05T10:34:14.526107+00:00 [scheduled]>] for executor: CeleryExecutor(parallelism=32)
[2025-07-05T10:34:20.601+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:34:20.601+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:34:20.904+0000] {strategy.py:161} INFO - Task execute_workload[02a79765-de49-4f4e-a465-db831a2c3f9c] received
[2025-07-05T10:34:20.914+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state queued for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_in_task', task_id='task1', run_id='manual__2025-07-05T10:34:14.526107+00:00', try_number=1, map_index=-1)
[2025-07-05T10:34:20.923+0000] {scheduler_job_runner.py:824} INFO - Setting external_id for <TaskInstance: otel_test_dag_with_pause_in_task.task1 manual__2025-07-05T10:34:14.526107+00:00 [queued]> to 02a79765-de49-4f4e-a465-db831a2c3f9c
[2025-07-05T10:34:22.518+0000] {celery_executor_utils.py:162} INFO - [02a79765-de49-4f4e-a465-db831a2c3f9c] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da26-b7f4-7ec8-b5a5-6c96f5b0d8b5'), task_id='task1', dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:34:14.526107+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-250b7fd821c59dc43b157d89ea4a5d5e-91a24e2cb21b3e8d-01'}, context_carrier={'traceparent': '00-250b7fd821c59dc43b157d89ea4a5d5e-e57992407a968702-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_in_task.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_in_task/run_id=manual__2025-07-05T10:34:14.526107+00:00/task_id=task1/attempt=1.log' type='ExecuteTask'
2025-07-05 10:34:22 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:34:22.574+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da26-b7f4-7ec8-b5a5-6c96f5b0d8b5/run "HTTP/1.1 200 OK"
2025-07-05 10:34:22 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da26-b7f4-7ec8-b5a5-6c96f5b0d8b5'), task_id='task1', dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:34:14.526107+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-250b7fd821c59dc43b157d89ea4a5d5e-91a24e2cb21b3e8d-01'}, context_carrier={'traceparent': '00-250b7fd821c59dc43b157d89ea4a5d5e-e57992407a968702-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_in_task.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 34, 22, 551286, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:34:14.526107+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 34, 14, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 34, 19, 151067, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 34, 19, 151067, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 34, 19, 151067, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 34, 20, 572200, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:34:22.958+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da26-b7f4-7ec8-b5a5-6c96f5b0d8b5/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:34:23 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:34:23.113+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da26-b7f4-7ec8-b5a5-6c96f5b0d8b5/rtif "HTTP/1.1 201 Created"
[2025-07-05T10:34:23.472+0000] {test_otel.py:1121} INFO - Control file exists and the task has been paused.
[2025-07-05T10:34:28.130+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da26-b7f4-7ec8-b5a5-6c96f5b0d8b5/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:34:33.136+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da26-b7f4-7ec8-b5a5-6c96f5b0d8b5/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:34:38.144+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da26-b7f4-7ec8-b5a5-6c96f5b0d8b5/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:34:43.150+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da26-b7f4-7ec8-b5a5-6c96f5b0d8b5/heartbeat "HTTP/1.1 204 No Content"
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:34:43.927+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:34:44.141+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:34:44.141+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:34:44.144+0000] {scheduler_job_runner.py:2153} INFO - Marked 1 SchedulerJob instances as failed
[2025-07-05T10:34:44.214+0000] {celery_executor.py:511} INFO - Adopted the following 1 tasks from a dead executor
    <TaskInstance: otel_test_dag_with_pause_in_task.task1 manual__2025-07-05T10:34:14.526107+00:00 [running]> in state STARTED
[2025-07-05T10:34:44.370+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:34:44.370+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:34:44.371+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used
[2025-07-05T10:34:48.156+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da26-b7f4-7ec8-b5a5-6c96f5b0d8b5/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:34:49 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 34, 49, 233806, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:34:49.257+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da26-b7f4-7ec8-b5a5-6c96f5b0d8b5/state "HTTP/1.1 204 No Content"
2025-07-05 10:34:49 [info     ] Task finished                  [supervisor] duration=26.728621356000076 exit_code=0 final_state=success
[2025-07-05T10:34:49.273+0000] {trace.py:128} INFO - Task execute_workload[02a79765-de49-4f4e-a465-db831a2c3f9c] succeeded in 28.367858351999985s: None
[2025-07-05T10:34:50.101+0000] {strategy.py:161} INFO - Task execute_workload[3d6a484a-5fdf-4959-8253-b0751fa857be] received
[2025-07-05T10:34:50.107+0000] {celery_executor_utils.py:162} INFO - [3d6a484a-5fdf-4959-8253-b0751fa857be] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da26-b7f5-7a9f-9a7a-8adf3f457a41'), task_id='task2', dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:34:14.526107+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-250b7fd821c59dc43b157d89ea4a5d5e-91a24e2cb21b3e8d-01'}, context_carrier={'traceparent': '00-250b7fd821c59dc43b157d89ea4a5d5e-0877d94b43a29968-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_in_task.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_in_task/run_id=manual__2025-07-05T10:34:14.526107+00:00/task_id=task2/attempt=1.log' type='ExecuteTask'
2025-07-05 10:34:50 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:34:50.306+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state success for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_in_task', task_id='task1', run_id='manual__2025-07-05T10:34:14.526107+00:00', try_number=1, map_index=-1)
[2025-07-05T10:34:50.317+0000] {scheduler_job_runner.py:834} INFO - TaskInstance Finished: dag_id=otel_test_dag_with_pause_in_task, task_id=task1, run_id=manual__2025-07-05T10:34:14.526107+00:00, map_index=-1, run_start_date=2025-07-05 10:34:22.551286+00:00, run_end_date=2025-07-05 10:34:49.233806+00:00, run_duration=26.68252, state=success, executor=CeleryExecutor(parallelism=32), executor_state=success, try_number=1, max_tries=0, pool=default_pool, queue=default, priority_weight=2, operator=_PythonDecoratedOperator, queued_dttm=2025-07-05 10:34:20.595541+00:00, scheduled_dttm=2025-07-05 10:34:20.585395+00:00,queued_by_job_id=7, pid=287
[2025-07-05T10:34:51.296+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da26-b7f5-7a9f-9a7a-8adf3f457a41/run "HTTP/1.1 200 OK"
2025-07-05 10:34:51 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da26-b7f5-7a9f-9a7a-8adf3f457a41'), task_id='task2', dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:34:14.526107+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-250b7fd821c59dc43b157d89ea4a5d5e-91a24e2cb21b3e8d-01'}, context_carrier={'traceparent': '00-250b7fd821c59dc43b157d89ea4a5d5e-0877d94b43a29968-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_in_task.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 34, 50, 153962, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:34:14.526107+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 34, 14, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 34, 19, 151067, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 34, 19, 151067, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 34, 19, 151067, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 34, 20, 572200, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={'task1': None}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:34:51.733+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da26-b7f5-7a9f-9a7a-8adf3f457a41/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:34:51 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:34:53.070+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da26-b7f5-7a9f-9a7a-8adf3f457a41/rtif "HTTP/1.1 201 Created"
2025-07-05 10:34:53 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 34, 53, 75890, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:34:53.101+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da26-b7f5-7a9f-9a7a-8adf3f457a41/state "HTTP/1.1 204 No Content"
2025-07-05 10:34:53 [info     ] Task finished                  [supervisor] duration=2.9678502890001255 exit_code=0 final_state=success
[2025-07-05T10:34:53.116+0000] {trace.py:128} INFO - Task execute_workload[3d6a484a-5fdf-4959-8253-b0751fa857be] succeeded in 3.0142134489999535s: None
[2025-07-05T10:34:53.406+0000] {dagrun.py:1203} INFO - Marking run <DagRun otel_test_dag_with_pause_in_task @ 2025-07-05 10:34:14+00:00: manual__2025-07-05T10:34:14.526107+00:00, state:running, queued_at: 2025-07-05 10:34:20.007103+00:00. run_type: manual> successful
[2025-07-05T10:34:53.407+0000] {dagrun.py:1253} INFO - DagRun Finished: dag_id=otel_test_dag_with_pause_in_task, logical_date=2025-07-05 10:34:14+00:00, run_id=manual__2025-07-05T10:34:14.526107+00:00, run_start_date=2025-07-05 10:34:20.572200+00:00, run_end_date=2025-07-05 10:34:53.407019+00:00, run_duration=32.834819, state=success, run_type=manual, data_interval_start=2025-07-05 10:34:19.151067+00:00, data_interval_end=2025-07-05 10:34:19.151067+00:00,

worker: Warm shutdown (MainProcess)
[2025-07-05T10:34:55.401+0000] {scheduler_job_runner.py:290} INFO - Exiting gracefully upon receiving signal 15
[2025-07-05T10:34:55.402+0000] {scheduler_job_runner.py:1011} INFO - Exited execute loop
------------------------------------------------------------------------------------------ Captured stderr call ------------------------------------------------------------------------------------------
/usr/local/lib/python3.10/site-packages/celery/platforms.py:841 SecurityWarning: You're running the worker with superuser privileges: this is
absolutely not recommended!

Please specify a different user using the --uid option.

User information: uid=0 euid=0 gid=0 egid=0

------------------------------------------------------------------------------------------- Captured log call --------------------------------------------------------------------------------------------
INFO     integration.otel.test_otel:test_otel.py:1121 Control file exists and the task has been paused.
___________________________________________________________ TestOtelIntegration.test_scheduler_exits_forcefully_after_the_first_task_finishes ____________________________________________________________
airflow-core/tests/integration/otel/test_otel.py:1285: in test_scheduler_exits_forcefully_after_the_first_task_finishes
    check_spans_for_paused_dag(output=out, dag=dag, is_recreated=True, check_t1_sub_spans=False)
airflow-core/tests/integration/otel/test_otel.py:479: in check_spans_for_paused_dag
    assert_span_name_belongs_to_root_span(
devel-common/src/tests_common/test_utils/otel_utils.py:231: in assert_span_name_belongs_to_root_span
    assert name_exists, f"Expected span '{span_name}' to belong to a root span, but it does not."
E   AssertionError: Expected span 'otel_test_dag_with_pause_between_tasks_recreated' to belong to a root span, but it does not.
------------------------------------------------------------------------------------------ Captured stdout call ------------------------------------------------------------------------------------------
[2025-07-05T10:35:50.824+0000] {test_otel.py:1280} INFO - out-start --
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:35:01.580+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:35:01.801+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:35:01.802+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:35:02.030+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:35:02.030+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:35:02.031+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used

 -------------- celery@947a95031c2d v5.5.3 (immunity)
--- ***** -----
-- ******* ---- Linux-6.8.0-1029-azure-x86_64-with-glibc2.36 2025-07-05 10:35:03
- *** --- * ---
- ** ---------- [config]
- ** ---------- .> app:         airflow.providers.celery.executors.celery_executor:0x7f3c2cb47d30
- ** ---------- .> transport:   redis://redis:6379/0
- ** ---------- .> results:     ***postgres/airflow
- *** --- * --- .> concurrency: 1 (prefork)
-- ******* ---- .> task events: OFF (enable -E to monitor tasks in this worker)
--- ***** -----
 -------------- [queues]
                .> default          exchange=default(direct) key=default


[tasks]
  . execute_workload

[2025-07-05T10:35:03.723+0000] {connection.py:22} INFO - Connected to redis://redis:6379/0
[2025-07-05T10:35:03.727+0000] {mingle.py:40} INFO - mingle: searching for neighbors
[2025-07-05T10:35:04.734+0000] {mingle.py:49} INFO - mingle: all alone
[2025-07-05T10:35:04.744+0000] {worker.py:176} INFO - celery@947a95031c2d ready.
No paused DAGs were found
     |                     |                     | data_interval_star |                     |          | last_scheduling_de |                     |          |            |        | triggering_user_nam
conf | dag_id              | dag_run_id          | t                  | data_interval_end   | end_date | cision             | logical_date        | run_type | start_date | state  | e
=====+=====================+=====================+====================+=====================+==========+====================+=====================+==========+============+========+====================
{}   | otel_test_dag_with_ | manual__2025-07-05T | 2025-07-05         | 2025-07-05          | None     | None               | 2025-07-05          | manual   | None       | queued | root
     | pause_between_tasks | 10:35:10.830795+00: | 10:35:15.383692+00 | 10:35:15.383692+00: |          |                    | 10:35:10+00:00      |          |            |        |
     |                     | 00                  | :00                | 00                  |          |                    |                     |          |            |        |

[2025-07-05T10:35:16.267+0000] {strategy.py:161} INFO - Task execute_workload[bfc8688e-4442-4b66-8f9d-3596190064c9] received
Control file not found. Waiting...
[2025-07-05T10:35:17.932+0000] {celery_executor_utils.py:162} INFO - [bfc8688e-4442-4b66-8f9d-3596190064c9] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da27-938d-76e1-946b-acb9717e3e80'), task_id='task1', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=3, executor_config=None, parent_context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-719f6d84b5a58667-01'}, context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-7145d88061ed4f32-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=task1/attempt=1.log' type='ExecuteTask'
2025-07-05 10:35:17 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:35:17.987+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da27-938d-76e1-946b-acb9717e3e80/run "HTTP/1.1 200 OK"
2025-07-05 10:35:17 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da27-938d-76e1-946b-acb9717e3e80'), task_id='task1', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=3, executor_config=None, parent_context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-719f6d84b5a58667-01'}, context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-7145d88061ed4f32-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 35, 17, 964285, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 35, 10, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 35, 16, 242691, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:35:18.375+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da27-938d-76e1-946b-acb9717e3e80/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:35:18 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:35:18.526+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da27-938d-76e1-946b-acb9717e3e80/rtif "HTTP/1.1 201 Created"
2025-07-05 10:35:18 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 35, 18, 606719, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:35:18.623+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da27-938d-76e1-946b-acb9717e3e80/state "HTTP/1.1 204 No Content"
2025-07-05 10:35:18 [info     ] Task finished                  [supervisor] duration=0.6790293599999586 exit_code=0 final_state=success
[2025-07-05T10:35:18.638+0000] {trace.py:128} INFO - Task execute_workload[bfc8688e-4442-4b66-8f9d-3596190064c9] succeeded in 2.3692751640001006s: None
[2025-07-05T10:35:18.929+0000] {scheduler_job_runner.py:453} INFO - 1 tasks up for execution:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:35:10.830795+00:00 [scheduled]>
[2025-07-05T10:35:18.929+0000] {scheduler_job_runner.py:525} INFO - DAG otel_test_dag_with_pause_between_tasks has 0/16 running and queued tasks
[2025-07-05T10:35:18.930+0000] {scheduler_job_runner.py:664} INFO - Setting the following tasks to queued state:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:35:10.830795+00:00 [scheduled]>
[2025-07-05T10:35:18.931+0000] {scheduler_job_runner.py:749} INFO - Trying to enqueue tasks: [<TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:35:10.830795+00:00 [scheduled]>] for executor: CeleryExecutor(parallelism=32)
[2025-07-05T10:35:18.936+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:35:18.936+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:35:19.247+0000] {strategy.py:161} INFO - Task execute_workload[6535586f-1774-47b1-a65f-fa9314e4c17e] received
[2025-07-05T10:35:19.253+0000] {celery_executor_utils.py:162} INFO - [6535586f-1774-47b1-a65f-fa9314e4c17e] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da27-938e-7c8c-b5c4-6d4dd0db169e'), task_id='paused_task', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-719f6d84b5a58667-01'}, context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-f52b6c6d714c7af6-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=paused_task/attempt=1.log' type='ExecuteTask'
[2025-07-05T10:35:19.256+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state queued for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='paused_task', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1)
[2025-07-05T10:35:19.267+0000] {scheduler_job_runner.py:824} INFO - Setting external_id for <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:35:10.830795+00:00 [queued]> to 6535586f-1774-47b1-a65f-fa9314e4c17e
2025-07-05 10:35:19 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:35:19.318+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da27-938e-7c8c-b5c4-6d4dd0db169e/run "HTTP/1.1 200 OK"
2025-07-05 10:35:19 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da27-938e-7c8c-b5c4-6d4dd0db169e'), task_id='paused_task', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-719f6d84b5a58667-01'}, context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-f52b6c6d714c7af6-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 35, 19, 294987, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 35, 10, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 35, 16, 242691, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={'task1': None}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:35:19.700+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da27-938e-7c8c-b5c4-6d4dd0db169e/heartbeat "HTTP/1.1 204 No Content"
Control file not found. Waiting...
2025-07-05 10:35:19 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:35:19.851+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da27-938e-7c8c-b5c4-6d4dd0db169e/rtif "HTTP/1.1 201 Created"
[2025-07-05T10:35:22.735+0000] {test_otel.py:1223} INFO - Control file exists and the task has been paused.
2025-07-05 10:35:22 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 35, 22, 858609, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:35:22.869+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da27-938e-7c8c-b5c4-6d4dd0db169e/state "HTTP/1.1 204 No Content"
2025-07-05 10:35:22 [info     ] Task finished                  [supervisor] duration=3.591618060999963 exit_code=0 final_state=success
[2025-07-05T10:35:22.883+0000] {trace.py:128} INFO - Task execute_workload[6535586f-1774-47b1-a65f-fa9314e4c17e] succeeded in 3.63492739000003s: None
[2025-07-05T10:35:23.265+0000] {strategy.py:161} INFO - Task execute_workload[1755d315-773e-461d-90de-833887401bc5] received
[2025-07-05T10:35:23.270+0000] {celery_executor_utils.py:162} INFO - [1755d315-773e-461d-90de-833887401bc5] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da27-938f-7a2b-9bcd-4d18c9e31eb8'), task_id='task2', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-719f6d84b5a58667-01'}, context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-b76b463847bce812-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=task2/attempt=1.log' type='ExecuteTask'
2025-07-05 10:35:23 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:35:23.325+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da27-938f-7a2b-9bcd-4d18c9e31eb8/run "HTTP/1.1 200 OK"
2025-07-05 10:35:23 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da27-938f-7a2b-9bcd-4d18c9e31eb8'), task_id='task2', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-719f6d84b5a58667-01'}, context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-b76b463847bce812-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 35, 23, 308761, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 35, 10, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 35, 16, 242691, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={'paused_task': None}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:35:23.716+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da27-938f-7a2b-9bcd-4d18c9e31eb8/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:35:23 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:35:23.866+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da27-938f-7a2b-9bcd-4d18c9e31eb8/rtif "HTTP/1.1 201 Created"
2025-07-05 10:35:23 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 35, 23, 871038, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:35:23.880+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da27-938f-7a2b-9bcd-4d18c9e31eb8/state "HTTP/1.1 204 No Content"
2025-07-05 10:35:23 [info     ] Task finished                  [supervisor] duration=0.5890264539998498 exit_code=0 final_state=success
[2025-07-05T10:35:23.894+0000] {trace.py:128} INFO - Task execute_workload[1755d315-773e-461d-90de-833887401bc5] succeeded in 0.6282467319999796s: None
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:35:43.256+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:35:43.476+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:35:43.476+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:35:43.480+0000] {scheduler_job_runner.py:2153} INFO - Marked 1 SchedulerJob instances as failed
[2025-07-05T10:35:43.644+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:35:43.645+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:35:43.645+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used
[2025-07-05T10:35:47.758+0000] {test_otel.py:548} INFO -
===== LOG FILE: /root/airflow/logs/dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=task2/attempt=1.log - START =====

[2025-07-05T10:35:47.758+0000] {test_otel.py:551} INFO - {"timestamp":"2025-07-05T10:35:23.707966","level":"info","event":"DAG bundles loaded: testing","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T10:35:23.708362","level":"info","event":"Filling up the DagBag from /opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T10:35:23.870263","level":"info","event":"Starting Task_2.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870673","level":"info","event":"Task_2, iteration '0'.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870751","level":"info","event":"Task_2, iteration '1'.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870806","level":"info","event":"Task_2, iteration '2'.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870854","level":"info","event":"Task_2 finished.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870912","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}

[2025-07-05T10:35:47.758+0000] {test_otel.py:555} INFO -
===== END =====

[2025-07-05T10:35:47.759+0000] {test_otel.py:548} INFO -
===== LOG FILE: /root/airflow/logs/dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=paused_task/attempt=1.log - START =====

[2025-07-05T10:35:47.759+0000] {test_otel.py:551} INFO - {"timestamp":"2025-07-05T10:35:19.691106","level":"info","event":"DAG bundles loaded: testing","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T10:35:19.691636","level":"info","event":"Filling up the DagBag from /opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T10:35:19.853548","level":"info","event":"Starting Paused_task.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:19.853884","level":"info","event":"Task has been paused.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:20.855227","level":"info","event":"Task has been paused.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:21.856547","level":"info","event":"Task has been paused.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:22.857928","level":"info","event":"Resuming task execution.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:22.858201","level":"info","event":"Paused_task finished.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:22.858461Z","level":"info","event":"Control file has been cleaned up.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:22.858341","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}

[2025-07-05T10:35:47.759+0000] {test_otel.py:555} INFO -
===== END =====

[2025-07-05T10:35:47.759+0000] {test_otel.py:548} INFO -
===== LOG FILE: /root/airflow/logs/dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=task1/attempt=1.log - START =====

[2025-07-05T10:35:47.760+0000] {test_otel.py:551} INFO - {"timestamp":"2025-07-05T10:35:18.367241","level":"info","event":"DAG bundles loaded: testing","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T10:35:18.367644","level":"info","event":"Filling up the DagBag from /opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T10:35:18.528719","level":"info","event":"Starting Task_1.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.529195","level":"info","event":"[OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.529511","level":"info","event":"Should use simple processor: True","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.529870","level":"info","event":"(otel_tracer.__init__) - [SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.567699","level":"info","event":"[ConsoleSpanExporter] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.567778","level":"info","event":"[SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.567843","level":"info","event":"Found ti.context_carrier: {'traceparent': '00-7e919697c562e8cbf68741db7034c199-7145d88061ed4f32-01'}.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.567893","level":"info","event":"Extracting the span context from the context_carrier.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.568071","level":"info","event":"[OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.568139","level":"info","event":"Should use simple processor: False","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.568285","level":"info","event":"(otel_tracer.__init__) - [BatchSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.604387","level":"info","event":"[ConsoleSpanExporter] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.604463","level":"info","event":"[SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.605012","level":"info","event":"From task sub_span1.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.605133","level":"info","event":"[ConsoleSpanExporter] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.605193","level":"info","event":"[SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.605340","level":"info","event":"From task sub_span2.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.605473","level":"info","event":"From task sub_span3.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.605765Z","level":"info","event":"{","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.605832Z","level":"info","event":"    \"name\": \"task1_sub_span3\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.605883Z","level":"info","event":"    \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.605926Z","level":"info","event":"        \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.605968Z","level":"info","event":"        \"span_id\": \"0xfe9d744babfbe098\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606009Z","level":"info","event":"        \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606050Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606101Z","level":"info","event":"    \"kind\": \"SpanKind.INTERNAL\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606145Z","level":"info","event":"    \"parent_id\": \"0x7971c9a4c0019d6d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606186Z","level":"info","event":"    \"start_time\": \"2025-07-05T10:35:18.605432Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606229Z","level":"info","event":"    \"end_time\": \"2025-07-05T10:35:18.605512Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606269Z","level":"info","event":"    \"status\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606308Z","level":"info","event":"        \"status_code\": \"UNSET\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606348Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606387Z","level":"info","event":"    \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606427Z","level":"info","event":"        \"attr3\": \"val3\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606467Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606506Z","level":"info","event":"    \"events\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606545Z","level":"info","event":"    \"links\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606606Z","level":"info","event":"    \"resource\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606650Z","level":"info","event":"        \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606690Z","level":"info","event":"            \"telemetry.sdk.language\": \"python\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606729Z","level":"info","event":"            \"telemetry.sdk.name\": \"opentelemetry\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606768Z","level":"info","event":"            \"telemetry.sdk.version\": \"1.27.0\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606807Z","level":"info","event":"            \"host.name\": \"947a95031c2d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606846Z","level":"info","event":"            \"service.name\": \"Airflow\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606884Z","level":"info","event":"        },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606922Z","level":"info","event":"        \"schema_url\": \"\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606960Z","level":"info","event":"    }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607001Z","level":"info","event":"}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607077Z","level":"info","event":"{","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607126Z","level":"info","event":"    \"name\": \"task1_sub_span2\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607168Z","level":"info","event":"    \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607209Z","level":"info","event":"        \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607250Z","level":"info","event":"        \"span_id\": \"0x7971c9a4c0019d6d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607289Z","level":"info","event":"        \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607327Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607366Z","level":"info","event":"    \"kind\": \"SpanKind.INTERNAL\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607404Z","level":"info","event":"    \"parent_id\": \"0x40c714693fd09616\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607448Z","level":"info","event":"    \"start_time\": \"2025-07-05T10:35:18.605249Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607489Z","level":"info","event":"    \"end_time\": \"2025-07-05T10:35:18.605738Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607528Z","level":"info","event":"    \"status\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607567Z","level":"info","event":"        \"status_code\": \"UNSET\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607643Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607688Z","level":"info","event":"    \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607732Z","level":"info","event":"        \"attr2\": \"val2\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607772Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607812Z","level":"info","event":"    \"events\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607850Z","level":"info","event":"    \"links\": [","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607888Z","level":"info","event":"        {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607927Z","level":"info","event":"            \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607966Z","level":"info","event":"                \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608012Z","level":"info","event":"                \"span_id\": \"0x40c714693fd09616\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608051Z","level":"info","event":"                \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608089Z","level":"info","event":"            },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608128Z","level":"info","event":"            \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608166Z","level":"info","event":"                \"meta.annotation_type\": \"link\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608205Z","level":"info","event":"                \"from\": \"parenttrace\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608243Z","level":"info","event":"            }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608282Z","level":"info","event":"        }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608321Z","level":"info","event":"    ],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608359Z","level":"info","event":"    \"resource\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608398Z","level":"info","event":"        \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608437Z","level":"info","event":"            \"telemetry.sdk.language\": \"python\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608476Z","level":"info","event":"            \"telemetry.sdk.name\": \"opentelemetry\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608514Z","level":"info","event":"            \"telemetry.sdk.version\": \"1.27.0\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608551Z","level":"info","event":"            \"host.name\": \"947a95031c2d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608610Z","level":"info","event":"            \"service.name\": \"Airflow\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608655Z","level":"info","event":"        },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608695Z","level":"info","event":"        \"schema_url\": \"\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608740Z","level":"info","event":"    }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608783Z","level":"info","event":"}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608823Z","level":"info","event":"{","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608862Z","level":"info","event":"    \"name\": \"task1_sub_span1\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608901Z","level":"info","event":"    \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608941Z","level":"info","event":"        \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608981Z","level":"info","event":"        \"span_id\": \"0x40c714693fd09616\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609020Z","level":"info","event":"        \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609058Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609097Z","level":"info","event":"    \"kind\": \"SpanKind.INTERNAL\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609135Z","level":"info","event":"    \"parent_id\": \"0x7145d88061ed4f32\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609174Z","level":"info","event":"    \"start_time\": \"2025-07-05T10:35:18.604850Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609212Z","level":"info","event":"    \"end_time\": \"2025-07-05T10:35:18.605872Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609250Z","level":"info","event":"    \"status\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609288Z","level":"info","event":"        \"status_code\": \"UNSET\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609326Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609364Z","level":"info","event":"    \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609402Z","level":"info","event":"        \"attr1\": \"val1\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609440Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609479Z","level":"info","event":"    \"events\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609517Z","level":"info","event":"    \"links\": [","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609555Z","level":"info","event":"        {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609623Z","level":"info","event":"            \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609667Z","level":"info","event":"                \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609708Z","level":"info","event":"                \"span_id\": \"0x7145d88061ed4f32\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609748Z","level":"info","event":"                \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609787Z","level":"info","event":"            },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609825Z","level":"info","event":"            \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609865Z","level":"info","event":"                \"meta.annotation_type\": \"link\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609903Z","level":"info","event":"                \"from\": \"parenttrace\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609941Z","level":"info","event":"            }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609986Z","level":"info","event":"        }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610027Z","level":"info","event":"    ],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610067Z","level":"info","event":"    \"resource\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610105Z","level":"info","event":"        \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610144Z","level":"info","event":"            \"telemetry.sdk.language\": \"python\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610186Z","level":"info","event":"            \"telemetry.sdk.name\": \"opentelemetry\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610225Z","level":"info","event":"            \"telemetry.sdk.version\": \"1.27.0\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610263Z","level":"info","event":"            \"host.name\": \"947a95031c2d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610300Z","level":"info","event":"            \"service.name\": \"Airflow\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610338Z","level":"info","event":"        },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610375Z","level":"info","event":"        \"schema_url\": \"\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610413Z","level":"info","event":"    }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610451Z","level":"info","event":"}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610489Z","level":"info","event":"{","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610526Z","level":"info","event":"    \"name\": \"task1_sub_span4\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610564Z","level":"info","event":"    \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610640Z","level":"info","event":"        \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610686Z","level":"info","event":"        \"span_id\": \"0x244b0bed33dbefe8\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610731Z","level":"info","event":"        \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610771Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610811Z","level":"info","event":"    \"kind\": \"SpanKind.INTERNAL\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610849Z","level":"info","event":"    \"parent_id\": \"0x7145d88061ed4f32\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610888Z","level":"info","event":"    \"start_time\": \"2025-07-05T10:35:18.606177Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610926Z","level":"info","event":"    \"end_time\": \"2025-07-05T10:35:18.606301Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610964Z","level":"info","event":"    \"status\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611002Z","level":"info","event":"        \"status_code\": \"UNSET\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611039Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611079Z","level":"info","event":"    \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611119Z","level":"info","event":"        \"attr4\": \"val4\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611159Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611198Z","level":"info","event":"    \"events\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611236Z","level":"info","event":"    \"links\": [","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611278Z","level":"info","event":"        {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611319Z","level":"info","event":"            \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611357Z","level":"info","event":"                \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611396Z","level":"info","event":"                \"span_id\": \"0x7145d88061ed4f32\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611434Z","level":"info","event":"                \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611481Z","level":"info","event":"            },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611518Z","level":"info","event":"            \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611555Z","level":"info","event":"                \"meta.annotation_type\": \"link\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611625Z","level":"info","event":"                \"from\": \"parenttrace\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611669Z","level":"info","event":"            }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611709Z","level":"info","event":"        }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611747Z","level":"info","event":"    ],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611785Z","level":"info","event":"    \"resource\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611823Z","level":"info","event":"        \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611861Z","level":"info","event":"            \"telemetry.sdk.language\": \"python\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611900Z","level":"info","event":"            \"telemetry.sdk.name\": \"opentelemetry\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611937Z","level":"info","event":"            \"telemetry.sdk.version\": \"1.27.0\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611975Z","level":"info","event":"            \"host.name\": \"947a95031c2d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612012Z","level":"info","event":"            \"service.name\": \"Airflow\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612049Z","level":"info","event":"        },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612086Z","level":"info","event":"        \"schema_url\": \"\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612126Z","level":"info","event":"    }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612165Z","level":"info","event":"}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606063","level":"info","event":"[ConsoleSpanExporter] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.606124","level":"info","event":"[SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.606269","level":"info","event":"From task sub_span4.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.606467","level":"info","event":"Task_1 finished.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.606559","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}

[2025-07-05T10:35:47.760+0000] {test_otel.py:555} INFO -
===== END =====


worker: Warm shutdown (MainProcess)
[2025-07-05T10:35:50.366+0000] {scheduler_job_runner.py:290} INFO - Exiting gracefully upon receiving signal 15
[2025-07-05T10:35:50.367+0000] {scheduler_job_runner.py:1011} INFO - Exited execute loop

-- out-end
[2025-07-05T10:35:50.824+0000] {test_otel.py:1281} INFO - err-start --
/usr/local/lib/python3.10/site-packages/celery/platforms.py:841 SecurityWarning: You're running the worker with superuser privileges: this is
absolutely not recommended!

Please specify a different user using the --uid option.

User information: uid=0 euid=0 gid=0 egid=0


-- err-end
[2025-07-05T10:35:50.825+0000] {otel_utils.py:225} INFO - Checking that 'otel_test_dag_with_pause_between_tasks_recreated' is a root span.
------------------------------------------------------------------------------------------- Captured log call --------------------------------------------------------------------------------------------
INFO     integration.otel.test_otel:test_otel.py:1223 Control file exists and the task has been paused.
INFO     integration.otel.test_otel:test_otel.py:548
===== LOG FILE: /root/airflow/logs/dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=task2/attempt=1.log - START =====

INFO     integration.otel.test_otel:test_otel.py:551 {"timestamp":"2025-07-05T10:35:23.707966","level":"info","event":"DAG bundles loaded: testing","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T10:35:23.708362","level":"info","event":"Filling up the DagBag from /opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T10:35:23.870263","level":"info","event":"Starting Task_2.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870673","level":"info","event":"Task_2, iteration '0'.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870751","level":"info","event":"Task_2, iteration '1'.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870806","level":"info","event":"Task_2, iteration '2'.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870854","level":"info","event":"Task_2 finished.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870912","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}

INFO     integration.otel.test_otel:test_otel.py:555
===== END =====

INFO     integration.otel.test_otel:test_otel.py:548
===== LOG FILE: /root/airflow/logs/dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=paused_task/attempt=1.log - START =====

INFO     integration.otel.test_otel:test_otel.py:551 {"timestamp":"2025-07-05T10:35:19.691106","level":"info","event":"DAG bundles loaded: testing","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T10:35:19.691636","level":"info","event":"Filling up the DagBag from /opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T10:35:19.853548","level":"info","event":"Starting Paused_task.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:19.853884","level":"info","event":"Task has been paused.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:20.855227","level":"info","event":"Task has been paused.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:21.856547","level":"info","event":"Task has been paused.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:22.857928","level":"info","event":"Resuming task execution.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:22.858201","level":"info","event":"Paused_task finished.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:22.858461Z","level":"info","event":"Control file has been cleaned up.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:22.858341","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}

INFO     integration.otel.test_otel:test_otel.py:555
===== END =====

INFO     integration.otel.test_otel:test_otel.py:548
===== LOG FILE: /root/airflow/logs/dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=task1/attempt=1.log - START =====

INFO     integration.otel.test_otel:test_otel.py:551 {"timestamp":"2025-07-05T10:35:18.367241","level":"info","event":"DAG bundles loaded: testing","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T10:35:18.367644","level":"info","event":"Filling up the DagBag from /opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T10:35:18.528719","level":"info","event":"Starting Task_1.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.529195","level":"info","event":"[OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.529511","level":"info","event":"Should use simple processor: True","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.529870","level":"info","event":"(otel_tracer.__init__) - [SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.567699","level":"info","event":"[ConsoleSpanExporter] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.567778","level":"info","event":"[SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.567843","level":"info","event":"Found ti.context_carrier: {'traceparent': '00-7e919697c562e8cbf68741db7034c199-7145d88061ed4f32-01'}.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.567893","level":"info","event":"Extracting the span context from the context_carrier.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.568071","level":"info","event":"[OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.568139","level":"info","event":"Should use simple processor: False","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.568285","level":"info","event":"(otel_tracer.__init__) - [BatchSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.604387","level":"info","event":"[ConsoleSpanExporter] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.604463","level":"info","event":"[SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.605012","level":"info","event":"From task sub_span1.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.605133","level":"info","event":"[ConsoleSpanExporter] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.605193","level":"info","event":"[SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.605340","level":"info","event":"From task sub_span2.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.605473","level":"info","event":"From task sub_span3.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.605765Z","level":"info","event":"{","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.605832Z","level":"info","event":"    \"name\": \"task1_sub_span3\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.605883Z","level":"info","event":"    \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.605926Z","level":"info","event":"        \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.605968Z","level":"info","event":"        \"span_id\": \"0xfe9d744babfbe098\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606009Z","level":"info","event":"        \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606050Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606101Z","level":"info","event":"    \"kind\": \"SpanKind.INTERNAL\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606145Z","level":"info","event":"    \"parent_id\": \"0x7971c9a4c0019d6d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606186Z","level":"info","event":"    \"start_time\": \"2025-07-05T10:35:18.605432Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606229Z","level":"info","event":"    \"end_time\": \"2025-07-05T10:35:18.605512Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606269Z","level":"info","event":"    \"status\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606308Z","level":"info","event":"        \"status_code\": \"UNSET\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606348Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606387Z","level":"info","event":"    \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606427Z","level":"info","event":"        \"attr3\": \"val3\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606467Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606506Z","level":"info","event":"    \"events\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606545Z","level":"info","event":"    \"links\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606606Z","level":"info","event":"    \"resource\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606650Z","level":"info","event":"        \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606690Z","level":"info","event":"            \"telemetry.sdk.language\": \"python\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606729Z","level":"info","event":"            \"telemetry.sdk.name\": \"opentelemetry\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606768Z","level":"info","event":"            \"telemetry.sdk.version\": \"1.27.0\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606807Z","level":"info","event":"            \"host.name\": \"947a95031c2d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606846Z","level":"info","event":"            \"service.name\": \"Airflow\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606884Z","level":"info","event":"        },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606922Z","level":"info","event":"        \"schema_url\": \"\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606960Z","level":"info","event":"    }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607001Z","level":"info","event":"}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607077Z","level":"info","event":"{","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607126Z","level":"info","event":"    \"name\": \"task1_sub_span2\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607168Z","level":"info","event":"    \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607209Z","level":"info","event":"        \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607250Z","level":"info","event":"        \"span_id\": \"0x7971c9a4c0019d6d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607289Z","level":"info","event":"        \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607327Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607366Z","level":"info","event":"    \"kind\": \"SpanKind.INTERNAL\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607404Z","level":"info","event":"    \"parent_id\": \"0x40c714693fd09616\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607448Z","level":"info","event":"    \"start_time\": \"2025-07-05T10:35:18.605249Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607489Z","level":"info","event":"    \"end_time\": \"2025-07-05T10:35:18.605738Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607528Z","level":"info","event":"    \"status\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607567Z","level":"info","event":"        \"status_code\": \"UNSET\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607643Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607688Z","level":"info","event":"    \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607732Z","level":"info","event":"        \"attr2\": \"val2\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607772Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607812Z","level":"info","event":"    \"events\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607850Z","level":"info","event":"    \"links\": [","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607888Z","level":"info","event":"        {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607927Z","level":"info","event":"            \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607966Z","level":"info","event":"                \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608012Z","level":"info","event":"                \"span_id\": \"0x40c714693fd09616\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608051Z","level":"info","event":"                \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608089Z","level":"info","event":"            },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608128Z","level":"info","event":"            \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608166Z","level":"info","event":"                \"meta.annotation_type\": \"link\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608205Z","level":"info","event":"                \"from\": \"parenttrace\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608243Z","level":"info","event":"            }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608282Z","level":"info","event":"        }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608321Z","level":"info","event":"    ],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608359Z","level":"info","event":"    \"resource\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608398Z","level":"info","event":"        \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608437Z","level":"info","event":"            \"telemetry.sdk.language\": \"python\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608476Z","level":"info","event":"            \"telemetry.sdk.name\": \"opentelemetry\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608514Z","level":"info","event":"            \"telemetry.sdk.version\": \"1.27.0\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608551Z","level":"info","event":"            \"host.name\": \"947a95031c2d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608610Z","level":"info","event":"            \"service.name\": \"Airflow\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608655Z","level":"info","event":"        },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608695Z","level":"info","event":"        \"schema_url\": \"\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608740Z","level":"info","event":"    }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608783Z","level":"info","event":"}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608823Z","level":"info","event":"{","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608862Z","level":"info","event":"    \"name\": \"task1_sub_span1\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608901Z","level":"info","event":"    \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608941Z","level":"info","event":"        \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608981Z","level":"info","event":"        \"span_id\": \"0x40c714693fd09616\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609020Z","level":"info","event":"        \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609058Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609097Z","level":"info","event":"    \"kind\": \"SpanKind.INTERNAL\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609135Z","level":"info","event":"    \"parent_id\": \"0x7145d88061ed4f32\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609174Z","level":"info","event":"    \"start_time\": \"2025-07-05T10:35:18.604850Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609212Z","level":"info","event":"    \"end_time\": \"2025-07-05T10:35:18.605872Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609250Z","level":"info","event":"    \"status\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609288Z","level":"info","event":"        \"status_code\": \"UNSET\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609326Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609364Z","level":"info","event":"    \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609402Z","level":"info","event":"        \"attr1\": \"val1\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609440Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609479Z","level":"info","event":"    \"events\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609517Z","level":"info","event":"    \"links\": [","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609555Z","level":"info","event":"        {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609623Z","level":"info","event":"            \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609667Z","level":"info","event":"                \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609708Z","level":"info","event":"                \"span_id\": \"0x7145d88061ed4f32\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609748Z","level":"info","event":"                \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609787Z","level":"info","event":"            },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609825Z","level":"info","event":"            \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609865Z","level":"info","event":"                \"meta.annotation_type\": \"link\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609903Z","level":"info","event":"                \"from\": \"parenttrace\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609941Z","level":"info","event":"            }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609986Z","level":"info","event":"        }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610027Z","level":"info","event":"    ],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610067Z","level":"info","event":"    \"resource\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610105Z","level":"info","event":"        \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610144Z","level":"info","event":"            \"telemetry.sdk.language\": \"python\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610186Z","level":"info","event":"            \"telemetry.sdk.name\": \"opentelemetry\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610225Z","level":"info","event":"            \"telemetry.sdk.version\": \"1.27.0\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610263Z","level":"info","event":"            \"host.name\": \"947a95031c2d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610300Z","level":"info","event":"            \"service.name\": \"Airflow\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610338Z","level":"info","event":"        },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610375Z","level":"info","event":"        \"schema_url\": \"\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610413Z","level":"info","event":"    }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610451Z","level":"info","event":"}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610489Z","level":"info","event":"{","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610526Z","level":"info","event":"    \"name\": \"task1_sub_span4\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610564Z","level":"info","event":"    \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610640Z","level":"info","event":"        \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610686Z","level":"info","event":"        \"span_id\": \"0x244b0bed33dbefe8\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610731Z","level":"info","event":"        \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610771Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610811Z","level":"info","event":"    \"kind\": \"SpanKind.INTERNAL\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610849Z","level":"info","event":"    \"parent_id\": \"0x7145d88061ed4f32\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610888Z","level":"info","event":"    \"start_time\": \"2025-07-05T10:35:18.606177Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610926Z","level":"info","event":"    \"end_time\": \"2025-07-05T10:35:18.606301Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610964Z","level":"info","event":"    \"status\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611002Z","level":"info","event":"        \"status_code\": \"UNSET\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611039Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611079Z","level":"info","event":"    \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611119Z","level":"info","event":"        \"attr4\": \"val4\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611159Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611198Z","level":"info","event":"    \"events\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611236Z","level":"info","event":"    \"links\": [","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611278Z","level":"info","event":"        {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611319Z","level":"info","event":"            \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611357Z","level":"info","event":"                \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611396Z","level":"info","event":"                \"span_id\": \"0x7145d88061ed4f32\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611434Z","level":"info","event":"                \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611481Z","level":"info","event":"            },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611518Z","level":"info","event":"            \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611555Z","level":"info","event":"                \"meta.annotation_type\": \"link\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611625Z","level":"info","event":"                \"from\": \"parenttrace\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611669Z","level":"info","event":"            }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611709Z","level":"info","event":"        }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611747Z","level":"info","event":"    ],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611785Z","level":"info","event":"    \"resource\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611823Z","level":"info","event":"        \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611861Z","level":"info","event":"            \"telemetry.sdk.language\": \"python\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611900Z","level":"info","event":"            \"telemetry.sdk.name\": \"opentelemetry\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611937Z","level":"info","event":"            \"telemetry.sdk.version\": \"1.27.0\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611975Z","level":"info","event":"            \"host.name\": \"947a95031c2d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612012Z","level":"info","event":"            \"service.name\": \"Airflow\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612049Z","level":"info","event":"        },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612086Z","level":"info","event":"        \"schema_url\": \"\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612126Z","level":"info","event":"    }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612165Z","level":"info","event":"}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606063","level":"info","event":"[ConsoleSpanExporter] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.606124","level":"info","event":"[SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.606269","level":"info","event":"From task sub_span4.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.606467","level":"info","event":"Task_1 finished.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.606559","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}

INFO     integration.otel.test_otel:test_otel.py:555
===== END =====

INFO     integration.otel.test_otel:test_otel.py:1280 out-start --
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:35:01.580+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:35:01.801+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:35:01.802+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:35:02.030+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:35:02.030+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:35:02.031+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used

 -------------- celery@947a95031c2d v5.5.3 (immunity)
--- ***** -----
-- ******* ---- Linux-6.8.0-1029-azure-x86_64-with-glibc2.36 2025-07-05 10:35:03
- *** --- * ---
- ** ---------- [config]
- ** ---------- .> app:         airflow.providers.celery.executors.celery_executor:0x7f3c2cb47d30
- ** ---------- .> transport:   redis://redis:6379/0
- ** ---------- .> results:     ***postgres/airflow
- *** --- * --- .> concurrency: 1 (prefork)
-- ******* ---- .> task events: OFF (enable -E to monitor tasks in this worker)
--- ***** -----
 -------------- [queues]
                .> default          exchange=default(direct) key=default


[tasks]
  . execute_workload

[2025-07-05T10:35:03.723+0000] {connection.py:22} INFO - Connected to redis://redis:6379/0
[2025-07-05T10:35:03.727+0000] {mingle.py:40} INFO - mingle: searching for neighbors
[2025-07-05T10:35:04.734+0000] {mingle.py:49} INFO - mingle: all alone
[2025-07-05T10:35:04.744+0000] {worker.py:176} INFO - celery@947a95031c2d ready.
No paused DAGs were found
     |                     |                     | data_interval_star |                     |          | last_scheduling_de |                     |          |            |        | triggering_user_nam
conf | dag_id              | dag_run_id          | t                  | data_interval_end   | end_date | cision             | logical_date        | run_type | start_date | state  | e
=====+=====================+=====================+====================+=====================+==========+====================+=====================+==========+============+========+====================
{}   | otel_test_dag_with_ | manual__2025-07-05T | 2025-07-05         | 2025-07-05          | None     | None               | 2025-07-05          | manual   | None       | queued | root
     | pause_between_tasks | 10:35:10.830795+00: | 10:35:15.383692+00 | 10:35:15.383692+00: |          |                    | 10:35:10+00:00      |          |            |        |
     |                     | 00                  | :00                | 00                  |          |                    |                     |          |            |        |

[2025-07-05T10:35:16.267+0000] {strategy.py:161} INFO - Task execute_workload[bfc8688e-4442-4b66-8f9d-3596190064c9] received
Control file not found. Waiting...
[2025-07-05T10:35:17.932+0000] {celery_executor_utils.py:162} INFO - [bfc8688e-4442-4b66-8f9d-3596190064c9] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da27-938d-76e1-946b-acb9717e3e80'), task_id='task1', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=3, executor_config=None, parent_context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-719f6d84b5a58667-01'}, context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-7145d88061ed4f32-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=task1/attempt=1.log' type='ExecuteTask'
2025-07-05 10:35:17 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:35:17.987+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da27-938d-76e1-946b-acb9717e3e80/run "HTTP/1.1 200 OK"
2025-07-05 10:35:17 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da27-938d-76e1-946b-acb9717e3e80'), task_id='task1', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=3, executor_config=None, parent_context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-719f6d84b5a58667-01'}, context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-7145d88061ed4f32-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 35, 17, 964285, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 35, 10, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 35, 16, 242691, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:35:18.375+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da27-938d-76e1-946b-acb9717e3e80/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:35:18 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:35:18.526+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da27-938d-76e1-946b-acb9717e3e80/rtif "HTTP/1.1 201 Created"
2025-07-05 10:35:18 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 35, 18, 606719, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:35:18.623+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da27-938d-76e1-946b-acb9717e3e80/state "HTTP/1.1 204 No Content"
2025-07-05 10:35:18 [info     ] Task finished                  [supervisor] duration=0.6790293599999586 exit_code=0 final_state=success
[2025-07-05T10:35:18.638+0000] {trace.py:128} INFO - Task execute_workload[bfc8688e-4442-4b66-8f9d-3596190064c9] succeeded in 2.3692751640001006s: None
[2025-07-05T10:35:18.929+0000] {scheduler_job_runner.py:453} INFO - 1 tasks up for execution:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:35:10.830795+00:00 [scheduled]>
[2025-07-05T10:35:18.929+0000] {scheduler_job_runner.py:525} INFO - DAG otel_test_dag_with_pause_between_tasks has 0/16 running and queued tasks
[2025-07-05T10:35:18.930+0000] {scheduler_job_runner.py:664} INFO - Setting the following tasks to queued state:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:35:10.830795+00:00 [scheduled]>
[2025-07-05T10:35:18.931+0000] {scheduler_job_runner.py:749} INFO - Trying to enqueue tasks: [<TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:35:10.830795+00:00 [scheduled]>] for executor: CeleryExecutor(parallelism=32)
[2025-07-05T10:35:18.936+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:35:18.936+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:35:19.247+0000] {strategy.py:161} INFO - Task execute_workload[6535586f-1774-47b1-a65f-fa9314e4c17e] received
[2025-07-05T10:35:19.253+0000] {celery_executor_utils.py:162} INFO - [6535586f-1774-47b1-a65f-fa9314e4c17e] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da27-938e-7c8c-b5c4-6d4dd0db169e'), task_id='paused_task', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-719f6d84b5a58667-01'}, context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-f52b6c6d714c7af6-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=paused_task/attempt=1.log' type='ExecuteTask'
[2025-07-05T10:35:19.256+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state queued for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='paused_task', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1)
[2025-07-05T10:35:19.267+0000] {scheduler_job_runner.py:824} INFO - Setting external_id for <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:35:10.830795+00:00 [queued]> to 6535586f-1774-47b1-a65f-fa9314e4c17e
2025-07-05 10:35:19 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:35:19.318+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da27-938e-7c8c-b5c4-6d4dd0db169e/run "HTTP/1.1 200 OK"
2025-07-05 10:35:19 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da27-938e-7c8c-b5c4-6d4dd0db169e'), task_id='paused_task', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-719f6d84b5a58667-01'}, context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-f52b6c6d714c7af6-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 35, 19, 294987, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 35, 10, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 35, 16, 242691, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={'task1': None}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:35:19.700+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da27-938e-7c8c-b5c4-6d4dd0db169e/heartbeat "HTTP/1.1 204 No Content"
Control file not found. Waiting...
2025-07-05 10:35:19 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:35:19.851+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da27-938e-7c8c-b5c4-6d4dd0db169e/rtif "HTTP/1.1 201 Created"
[2025-07-05T10:35:22.735+0000] {test_otel.py:1223} INFO - Control file exists and the task has been paused.
2025-07-05 10:35:22 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 35, 22, 858609, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:35:22.869+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da27-938e-7c8c-b5c4-6d4dd0db169e/state "HTTP/1.1 204 No Content"
2025-07-05 10:35:22 [info     ] Task finished                  [supervisor] duration=3.591618060999963 exit_code=0 final_state=success
[2025-07-05T10:35:22.883+0000] {trace.py:128} INFO - Task execute_workload[6535586f-1774-47b1-a65f-fa9314e4c17e] succeeded in 3.63492739000003s: None
[2025-07-05T10:35:23.265+0000] {strategy.py:161} INFO - Task execute_workload[1755d315-773e-461d-90de-833887401bc5] received
[2025-07-05T10:35:23.270+0000] {celery_executor_utils.py:162} INFO - [1755d315-773e-461d-90de-833887401bc5] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da27-938f-7a2b-9bcd-4d18c9e31eb8'), task_id='task2', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-719f6d84b5a58667-01'}, context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-b76b463847bce812-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=task2/attempt=1.log' type='ExecuteTask'
2025-07-05 10:35:23 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:35:23.325+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da27-938f-7a2b-9bcd-4d18c9e31eb8/run "HTTP/1.1 200 OK"
2025-07-05 10:35:23 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da27-938f-7a2b-9bcd-4d18c9e31eb8'), task_id='task2', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-719f6d84b5a58667-01'}, context_carrier={'traceparent': '00-7e919697c562e8cbf68741db7034c199-b76b463847bce812-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 35, 23, 308761, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:35:10.830795+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 35, 10, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 35, 15, 383692, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 35, 16, 242691, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={'paused_task': None}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:35:23.716+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da27-938f-7a2b-9bcd-4d18c9e31eb8/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:35:23 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:35:23.866+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da27-938f-7a2b-9bcd-4d18c9e31eb8/rtif "HTTP/1.1 201 Created"
2025-07-05 10:35:23 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 35, 23, 871038, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:35:23.880+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da27-938f-7a2b-9bcd-4d18c9e31eb8/state "HTTP/1.1 204 No Content"
2025-07-05 10:35:23 [info     ] Task finished                  [supervisor] duration=0.5890264539998498 exit_code=0 final_state=success
[2025-07-05T10:35:23.894+0000] {trace.py:128} INFO - Task execute_workload[1755d315-773e-461d-90de-833887401bc5] succeeded in 0.6282467319999796s: None
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:35:43.256+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:35:43.476+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:35:43.476+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:35:43.480+0000] {scheduler_job_runner.py:2153} INFO - Marked 1 SchedulerJob instances as failed
[2025-07-05T10:35:43.644+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:35:43.645+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:35:43.645+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used
[2025-07-05T10:35:47.758+0000] {test_otel.py:548} INFO -
===== LOG FILE: /root/airflow/logs/dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=task2/attempt=1.log - START =====

[2025-07-05T10:35:47.758+0000] {test_otel.py:551} INFO - {"timestamp":"2025-07-05T10:35:23.707966","level":"info","event":"DAG bundles loaded: testing","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T10:35:23.708362","level":"info","event":"Filling up the DagBag from /opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T10:35:23.870263","level":"info","event":"Starting Task_2.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870673","level":"info","event":"Task_2, iteration '0'.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870751","level":"info","event":"Task_2, iteration '1'.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870806","level":"info","event":"Task_2, iteration '2'.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870854","level":"info","event":"Task_2 finished.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:23.870912","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}

[2025-07-05T10:35:47.758+0000] {test_otel.py:555} INFO -
===== END =====

[2025-07-05T10:35:47.759+0000] {test_otel.py:548} INFO -
===== LOG FILE: /root/airflow/logs/dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=paused_task/attempt=1.log - START =====

[2025-07-05T10:35:47.759+0000] {test_otel.py:551} INFO - {"timestamp":"2025-07-05T10:35:19.691106","level":"info","event":"DAG bundles loaded: testing","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T10:35:19.691636","level":"info","event":"Filling up the DagBag from /opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T10:35:19.853548","level":"info","event":"Starting Paused_task.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:19.853884","level":"info","event":"Task has been paused.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:20.855227","level":"info","event":"Task has been paused.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:21.856547","level":"info","event":"Task has been paused.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:22.857928","level":"info","event":"Resuming task execution.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:22.858201","level":"info","event":"Paused_task finished.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:22.858461Z","level":"info","event":"Control file has been cleaned up.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:22.858341","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}

[2025-07-05T10:35:47.759+0000] {test_otel.py:555} INFO -
===== END =====

[2025-07-05T10:35:47.759+0000] {test_otel.py:548} INFO -
===== LOG FILE: /root/airflow/logs/dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:35:10.830795+00:00/task_id=task1/attempt=1.log - START =====

[2025-07-05T10:35:47.760+0000] {test_otel.py:551} INFO - {"timestamp":"2025-07-05T10:35:18.367241","level":"info","event":"DAG bundles loaded: testing","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-05T10:35:18.367644","level":"info","event":"Filling up the DagBag from /opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-05T10:35:18.528719","level":"info","event":"Starting Task_1.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.529195","level":"info","event":"[OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.529511","level":"info","event":"Should use simple processor: True","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.529870","level":"info","event":"(otel_tracer.__init__) - [SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.567699","level":"info","event":"[ConsoleSpanExporter] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.567778","level":"info","event":"[SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.567843","level":"info","event":"Found ti.context_carrier: {'traceparent': '00-7e919697c562e8cbf68741db7034c199-7145d88061ed4f32-01'}.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.567893","level":"info","event":"Extracting the span context from the context_carrier.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.568071","level":"info","event":"[OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.568139","level":"info","event":"Should use simple processor: False","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.568285","level":"info","event":"(otel_tracer.__init__) - [BatchSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.604387","level":"info","event":"[ConsoleSpanExporter] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.604463","level":"info","event":"[SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.605012","level":"info","event":"From task sub_span1.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.605133","level":"info","event":"[ConsoleSpanExporter] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.605193","level":"info","event":"[SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.605340","level":"info","event":"From task sub_span2.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.605473","level":"info","event":"From task sub_span3.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.605765Z","level":"info","event":"{","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.605832Z","level":"info","event":"    \"name\": \"task1_sub_span3\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.605883Z","level":"info","event":"    \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.605926Z","level":"info","event":"        \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.605968Z","level":"info","event":"        \"span_id\": \"0xfe9d744babfbe098\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606009Z","level":"info","event":"        \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606050Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606101Z","level":"info","event":"    \"kind\": \"SpanKind.INTERNAL\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606145Z","level":"info","event":"    \"parent_id\": \"0x7971c9a4c0019d6d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606186Z","level":"info","event":"    \"start_time\": \"2025-07-05T10:35:18.605432Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606229Z","level":"info","event":"    \"end_time\": \"2025-07-05T10:35:18.605512Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606269Z","level":"info","event":"    \"status\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606308Z","level":"info","event":"        \"status_code\": \"UNSET\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606348Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606387Z","level":"info","event":"    \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606427Z","level":"info","event":"        \"attr3\": \"val3\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606467Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606506Z","level":"info","event":"    \"events\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606545Z","level":"info","event":"    \"links\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606606Z","level":"info","event":"    \"resource\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606650Z","level":"info","event":"        \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606690Z","level":"info","event":"            \"telemetry.sdk.language\": \"python\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606729Z","level":"info","event":"            \"telemetry.sdk.name\": \"opentelemetry\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606768Z","level":"info","event":"            \"telemetry.sdk.version\": \"1.27.0\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606807Z","level":"info","event":"            \"host.name\": \"947a95031c2d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606846Z","level":"info","event":"            \"service.name\": \"Airflow\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606884Z","level":"info","event":"        },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606922Z","level":"info","event":"        \"schema_url\": \"\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606960Z","level":"info","event":"    }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607001Z","level":"info","event":"}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607077Z","level":"info","event":"{","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607126Z","level":"info","event":"    \"name\": \"task1_sub_span2\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607168Z","level":"info","event":"    \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607209Z","level":"info","event":"        \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607250Z","level":"info","event":"        \"span_id\": \"0x7971c9a4c0019d6d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607289Z","level":"info","event":"        \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607327Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607366Z","level":"info","event":"    \"kind\": \"SpanKind.INTERNAL\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607404Z","level":"info","event":"    \"parent_id\": \"0x40c714693fd09616\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607448Z","level":"info","event":"    \"start_time\": \"2025-07-05T10:35:18.605249Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607489Z","level":"info","event":"    \"end_time\": \"2025-07-05T10:35:18.605738Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607528Z","level":"info","event":"    \"status\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607567Z","level":"info","event":"        \"status_code\": \"UNSET\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607643Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607688Z","level":"info","event":"    \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607732Z","level":"info","event":"        \"attr2\": \"val2\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607772Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607812Z","level":"info","event":"    \"events\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607850Z","level":"info","event":"    \"links\": [","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607888Z","level":"info","event":"        {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607927Z","level":"info","event":"            \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.607966Z","level":"info","event":"                \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608012Z","level":"info","event":"                \"span_id\": \"0x40c714693fd09616\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608051Z","level":"info","event":"                \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608089Z","level":"info","event":"            },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608128Z","level":"info","event":"            \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608166Z","level":"info","event":"                \"meta.annotation_type\": \"link\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608205Z","level":"info","event":"                \"from\": \"parenttrace\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608243Z","level":"info","event":"            }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608282Z","level":"info","event":"        }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608321Z","level":"info","event":"    ],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608359Z","level":"info","event":"    \"resource\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608398Z","level":"info","event":"        \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608437Z","level":"info","event":"            \"telemetry.sdk.language\": \"python\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608476Z","level":"info","event":"            \"telemetry.sdk.name\": \"opentelemetry\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608514Z","level":"info","event":"            \"telemetry.sdk.version\": \"1.27.0\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608551Z","level":"info","event":"            \"host.name\": \"947a95031c2d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608610Z","level":"info","event":"            \"service.name\": \"Airflow\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608655Z","level":"info","event":"        },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608695Z","level":"info","event":"        \"schema_url\": \"\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608740Z","level":"info","event":"    }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608783Z","level":"info","event":"}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608823Z","level":"info","event":"{","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608862Z","level":"info","event":"    \"name\": \"task1_sub_span1\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608901Z","level":"info","event":"    \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608941Z","level":"info","event":"        \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.608981Z","level":"info","event":"        \"span_id\": \"0x40c714693fd09616\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609020Z","level":"info","event":"        \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609058Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609097Z","level":"info","event":"    \"kind\": \"SpanKind.INTERNAL\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609135Z","level":"info","event":"    \"parent_id\": \"0x7145d88061ed4f32\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609174Z","level":"info","event":"    \"start_time\": \"2025-07-05T10:35:18.604850Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609212Z","level":"info","event":"    \"end_time\": \"2025-07-05T10:35:18.605872Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609250Z","level":"info","event":"    \"status\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609288Z","level":"info","event":"        \"status_code\": \"UNSET\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609326Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609364Z","level":"info","event":"    \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609402Z","level":"info","event":"        \"attr1\": \"val1\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609440Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609479Z","level":"info","event":"    \"events\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609517Z","level":"info","event":"    \"links\": [","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609555Z","level":"info","event":"        {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609623Z","level":"info","event":"            \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609667Z","level":"info","event":"                \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609708Z","level":"info","event":"                \"span_id\": \"0x7145d88061ed4f32\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609748Z","level":"info","event":"                \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609787Z","level":"info","event":"            },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609825Z","level":"info","event":"            \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609865Z","level":"info","event":"                \"meta.annotation_type\": \"link\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609903Z","level":"info","event":"                \"from\": \"parenttrace\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609941Z","level":"info","event":"            }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.609986Z","level":"info","event":"        }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610027Z","level":"info","event":"    ],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610067Z","level":"info","event":"    \"resource\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610105Z","level":"info","event":"        \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610144Z","level":"info","event":"            \"telemetry.sdk.language\": \"python\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610186Z","level":"info","event":"            \"telemetry.sdk.name\": \"opentelemetry\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610225Z","level":"info","event":"            \"telemetry.sdk.version\": \"1.27.0\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610263Z","level":"info","event":"            \"host.name\": \"947a95031c2d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610300Z","level":"info","event":"            \"service.name\": \"Airflow\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610338Z","level":"info","event":"        },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610375Z","level":"info","event":"        \"schema_url\": \"\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610413Z","level":"info","event":"    }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610451Z","level":"info","event":"}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610489Z","level":"info","event":"{","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610526Z","level":"info","event":"    \"name\": \"task1_sub_span4\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610564Z","level":"info","event":"    \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610640Z","level":"info","event":"        \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610686Z","level":"info","event":"        \"span_id\": \"0x244b0bed33dbefe8\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610731Z","level":"info","event":"        \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610771Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610811Z","level":"info","event":"    \"kind\": \"SpanKind.INTERNAL\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610849Z","level":"info","event":"    \"parent_id\": \"0x7145d88061ed4f32\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610888Z","level":"info","event":"    \"start_time\": \"2025-07-05T10:35:18.606177Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610926Z","level":"info","event":"    \"end_time\": \"2025-07-05T10:35:18.606301Z\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.610964Z","level":"info","event":"    \"status\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611002Z","level":"info","event":"        \"status_code\": \"UNSET\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611039Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611079Z","level":"info","event":"    \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611119Z","level":"info","event":"        \"attr4\": \"val4\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611159Z","level":"info","event":"    },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611198Z","level":"info","event":"    \"events\": [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611236Z","level":"info","event":"    \"links\": [","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611278Z","level":"info","event":"        {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611319Z","level":"info","event":"            \"context\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611357Z","level":"info","event":"                \"trace_id\": \"0x7e919697c562e8cbf68741db7034c199\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611396Z","level":"info","event":"                \"span_id\": \"0x7145d88061ed4f32\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611434Z","level":"info","event":"                \"trace_state\": \"[]\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611481Z","level":"info","event":"            },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611518Z","level":"info","event":"            \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611555Z","level":"info","event":"                \"meta.annotation_type\": \"link\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611625Z","level":"info","event":"                \"from\": \"parenttrace\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611669Z","level":"info","event":"            }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611709Z","level":"info","event":"        }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611747Z","level":"info","event":"    ],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611785Z","level":"info","event":"    \"resource\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611823Z","level":"info","event":"        \"attributes\": {","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611861Z","level":"info","event":"            \"telemetry.sdk.language\": \"python\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611900Z","level":"info","event":"            \"telemetry.sdk.name\": \"opentelemetry\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611937Z","level":"info","event":"            \"telemetry.sdk.version\": \"1.27.0\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.611975Z","level":"info","event":"            \"host.name\": \"947a95031c2d\",","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612012Z","level":"info","event":"            \"service.name\": \"Airflow\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612049Z","level":"info","event":"        },","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612086Z","level":"info","event":"        \"schema_url\": \"\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612126Z","level":"info","event":"    }","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.612165Z","level":"info","event":"}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-05T10:35:18.606063","level":"info","event":"[ConsoleSpanExporter] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.606124","level":"info","event":"[SimpleSpanProcessor] is being used","logger":"airflow.traces.otel_tracer"}
{"timestamp":"2025-07-05T10:35:18.606269","level":"info","event":"From task sub_span4.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.606467","level":"info","event":"Task_1 finished.","logger":"airflow.otel_test_dag_with_pause"}
{"timestamp":"2025-07-05T10:35:18.606559","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}

[2025-07-05T10:35:47.760+0000] {test_otel.py:555} INFO -
===== END =====


worker: Warm shutdown (MainProcess)
[2025-07-05T10:35:50.366+0000] {scheduler_job_runner.py:290} INFO - Exiting gracefully upon receiving signal 15
[2025-07-05T10:35:50.367+0000] {scheduler_job_runner.py:1011} INFO - Exited execute loop

-- out-end
INFO     integration.otel.test_otel:test_otel.py:1281 err-start --
/usr/local/lib/python3.10/site-packages/celery/platforms.py:841 SecurityWarning: You're running the worker with superuser privileges: this is
absolutely not recommended!

Please specify a different user using the --uid option.

User information: uid=0 euid=0 gid=0 egid=0


-- err-end
INFO     integration.otel.otel_utils:otel_utils.py:225 Checking that 'otel_test_dag_with_pause_between_tasks_recreated' is a root span.
------------------------------------------------------------------------ generated xml file: /files/test_result-all-postgres.xml -------------------------------------------------------------------------
========================================================================================= slowest 100 durations ==========================================================================================
90.00s call     airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_change_after_the_first_task_finishes
90.00s call     airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_exits_gracefully_in_the_middle_of_the_first_task
56.30s call     airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_exits_forcefully_in_the_middle_of_the_first_task
54.92s call     airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_exits_forcefully_after_the_first_task_finishes
47.04s call     airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_dag_execution_succeeds
42.57s call     airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_same_scheduler_processing_the_entire_dag
17.97s setup    airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_dag_execution_succeeds

(31 durations < 0.005s hidden.  Use -vv to show these durations.)
================================================================================== Warning summary. Total: 9, Unique: 6 ==================================================================================
other: total 7, unique 4
  runtest: total 7, unique 4
tests: total 2, unique 2
  runtest: total 2, unique 2
Warnings saved into /files/warnings-all-postgres.txt file.
======================================================================================== short test summary info =========================================================================================
FAILED airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_change_after_the_first_task_finishes - Failed: Timeout >90.0s
FAILED airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_exits_gracefully_in_the_middle_of_the_first_task - Failed: Timeout >90.0s
FAILED airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_exits_forcefully_in_the_middle_of_the_first_task - AssertionError: Dag run span status isn't ended as expected.Actual status: should_end.
assert equals failed
  'should_end'                 <SpanStatus.ENDED: 'ended'>
FAILED airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_exits_forcefully_after_the_first_task_finishes - AssertionError: Expected span 'otel_test_dag_with_pause_between_tasks_recreated' to belong to a root span, but it does not.
===================================================================== 4 failed, 2 passed, 10 skipped, 1 warning in 403.13s (0:06:43) =====================================================================

Dumping logs on error

###########################################################################################
                   Dumping logs from all the airflow tasks
###########################################################################################
                   Logs dumped to /files/airflow_logs_2025-07-05_0_0.log.tar.gz
###########################################################################################


Test failed with 1. Dumping logs
Running command: <docker ps '{{.Names}}'>
Wait 10 seconds for logs to find their way to stderr.

Dumping containers: ['airflow-test-all-postgres-1', 'airflow-test-all-redis-1'] for all.

Dumping container airflow-test-all-postgres-1 to /home/runner/work/airflow/airflow/files/container_logs_airflow-test-all-postgres-1_2025_05_07_10_36_02.log

Running command: <docker logs airflow-test-all-postgres-1>
Dumping container airflow-test-all-redis-1 to /home/runner/work/airflow/airflow/files/container_logs_airflow-test-all-redis-1_2025_05_07_10_36_02.log

Running command: <docker logs airflow-test-all-redis-1>

The core Integration Tests failed. Retrying once

This could be due to a flaky test, re-running once to re-check it After restarting docker.

Running command: <docker info>
Running command: <docker info>
Running command: <docker version '{{.Client.Version}}'>
Good version of Docker: 28.0.4.
Running command: <docker compose version>
Good version of docker-compose: 2.36.2
Checking executable permissions on /home/runner/work/airflow/airflow/scripts/docker/entrypoint_ci.sh
Checking executable permissions on /home/runner/work/airflow/airflow/scripts/docker/entrypoint_exec.sh
Checking executable permissions on /home/runner/work/airflow/airflow/scripts/docker/entrypoint_prod.sh
Executable permissions on entrypoints are OK
Running command: <git rev-parse HEAD>
Running command: <docker compose breeze down>
Cleaning .pyc and __pycache__
Cleaned
Running command: <docker info>
Running command: <docker info>
Running command: <docker version '{{.Client.Version}}'>
Good version of Docker: 28.0.4.
Running command: <docker compose version>
Good version of docker-compose: 2.36.2
Checking executable permissions on /home/runner/work/airflow/airflow/scripts/docker/entrypoint_ci.sh
Checking executable permissions on /home/runner/work/airflow/airflow/scripts/docker/entrypoint_exec.sh
Checking executable permissions on /home/runner/work/airflow/airflow/scripts/docker/entrypoint_prod.sh
Executable permissions on entrypoints are OK
Running command: <git rev-parse HEAD>
Running command: <docker compose airflow-test-all down>
Running command: <docker compose airflow-test-all run airflow>
 Network airflow-test-all_default  Creating
 Network airflow-test-all_default  Created
 Volume "airflow-test-all_postgres-db-volume"  Creating
 Volume "airflow-test-all_postgres-db-volume"  Created
 Volume "airflow-test-all_redis-db-volume"  Creating
 Volume "airflow-test-all_redis-db-volume"  Created
 Volume "airflow-test-all_root-airflow-volume"  Creating
 Volume "airflow-test-all_root-airflow-volume"  Created
 Volume "airflow-test-all_airflow-cache-volume"  Creating
 Volume "airflow-test-all_airflow-cache-volume"  Created
 Container airflow-test-all-redis-1  Creating
 Container airflow-test-all-postgres-1  Creating
 Container airflow-test-all-redis-1  Created
 Container airflow-test-all-postgres-1  Created
 Container airflow-test-all-postgres-1  Starting
 Container airflow-test-all-redis-1  Starting
 Container airflow-test-all-postgres-1  Started
 Container airflow-test-all-redis-1  Started

Using 'uv' to install Airflow


Using airflow version from current sources


Running Initialization. Your basic configuration is:

  * Airflow home: /root/airflow
  * Airflow sources: /opt/airflow
  * Airflow core SQL connection: ***postgres/airflow
  * Airflow backend: Postgres: 13


Checking backend and integrations.

PostgreSQL: OK.

Redis: OK.

Using 'uv' to install Airflow


Starting the tests with those pytest arguments: airflow-core/tests/integration --verbosity=0 --strict-markers --durations=100 --maxfail=50 --color=yes --junitxml=/files/test_result-all-postgres.xml --timeouts-order=moi --setup-timeout=60 --execution-timeout=60 --teardown-timeout=60 --disable-warnings -rfEX --ignore-glob=*/tests/system/* --ignore-glob=providers/apache/cassandra/tests/integration/* --ignore-glob=providers/apache/drill/tests/integration/* --ignore-glob=providers/apache/hive/tests/integration/* --ignore-glob=providers/apache/kafka/tests/integration/* --ignore-glob=providers/apache/pinot/tests/integration/* --ignore-glob=providers/apache/tinkerpop/tests/integration/* --ignore-glob=providers/celery/tests/integration/* --ignore-glob=providers/google/tests/integration/* --ignore-glob=providers/microsoft/mssql/tests/integration/* --ignore-glob=providers/mongo/tests/integration/* --ignore-glob=providers/openlineage/tests/integration/* --ignore-glob=providers/qdrant/tests/integration/* --ignore-glob=providers/redis/tests/integration/* --ignore-glob=providers/trino/tests/integration/* --ignore-glob=providers/ydb/tests/integration/* --warning-output-path=/files/warnings-all-postgres.txt --ignore=helm-tests --with-db-init --no-cov

========================================================================================== test session starts ===========================================================================================
platform linux -- Python 3.10.18, pytest-8.4.1, pluggy-1.6.0
rootdir: /opt/airflow
configfile: pyproject.toml
plugins: xdist-3.8.0, custom-exit-code-0.3.0, rerunfailures-15.1, requests-mock-1.12.1, instafail-0.5.0, asyncio-0.25.0, icdiff-0.9, cov-6.2.1, time-machine-2.16.0, unordered-0.7.0, timeouts-1.2.1, anyio-4.9.0, kgb-7.2, mock-3.14.1
asyncio: mode=strict, asyncio_default_fixture_loop_scope=function
setup timeout: 60.0s, execution timeout: 60.0s, teardown timeout: 60.0s
collected 16 items

airflow-core/tests/integration/cli/commands/test_celery_command.py sss                                                                                                                             [ 18%]
airflow-core/tests/integration/otel/test_otel.py ..FFFF                                                                                                                                            [ 56%]
airflow-core/tests/integration/security/test_kerberos.py sssssss                                                                                                                                   [100%]

================================================================================================ FAILURES ================================================================================================
________________________________________________________________ TestOtelIntegration.test_scheduler_change_after_the_first_task_finishes _________________________________________________________________
airflow-core/tests/integration/otel/test_otel.py:943: in test_scheduler_change_after_the_first_task_finishes
    wait_for_dag_run_and_check_span_status(
airflow-core/tests/integration/otel/test_otel.py:114: in wait_for_dag_run_and_check_span_status
    assert dag_run_span_status == span_status, (
E   AssertionError: Dag run span status isn't should_end as expected.Actual status: ended.
E   assert equals failed
E     'ended'                                <SpanStatus.SHOULD_END: 'should_end'>

During handling of the above exception, another exception occurred:
airflow-core/tests/integration/otel/test_otel.py:967: in test_scheduler_change_after_the_first_task_finishes
    scheduler_process_1.wait()
/usr/local/lib/python3.10/subprocess.py:1209: in wait
    return self._wait(timeout=timeout)
/usr/local/lib/python3.10/subprocess.py:1959: in _wait
    (pid, sts) = self._try_wait(0)
/usr/local/lib/python3.10/subprocess.py:1917: in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
E   Failed: Timeout >90.0s
------------------------------------------------------------------------------------------ Captured stdout call ------------------------------------------------------------------------------------------

 -------------- celery@b86782fa0b75 v5.5.3 (immunity)
--- ***** -----
-- ******* ---- Linux-6.8.0-1029-azure-x86_64-with-glibc2.36 2025-07-05 10:38:16
- *** --- * ---
- ** ---------- [config]
- ** ---------- .> app:         airflow.providers.celery.executors.celery_executor:0x7f2d05f8aad0
- ** ---------- .> transport:   redis://redis:6379/0
- ** ---------- .> results:     ***postgres/airflow
- *** --- * --- .> concurrency: 1 (prefork)
-- ******* ---- .> task events: OFF (enable -E to monitor tasks in this worker)
--- ***** -----
 -------------- [queues]
                .> default          exchange=default(direct) key=default


[tasks]
  . execute_workload

[2025-07-05T10:38:16.721+0000] {connection.py:22} INFO - Connected to redis://redis:6379/0
[2025-07-05T10:38:16.726+0000] {mingle.py:40} INFO - mingle: searching for neighbors
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:38:17.046+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:38:17.258+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:38:17.259+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:38:17.417+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:38:17.418+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:38:17.418+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used
[2025-07-05T10:38:17.735+0000] {mingle.py:49} INFO - mingle: all alone
[2025-07-05T10:38:17.745+0000] {worker.py:176} INFO - celery@b86782fa0b75 ready.
No paused DAGs were found
     |                     |                     | data_interval_star |                     |          | last_scheduling_de |                     |          |            |        | triggering_user_nam
conf | dag_id              | dag_run_id          | t                  | data_interval_end   | end_date | cision             | logical_date        | run_type | start_date | state  | e
=====+=====================+=====================+====================+=====================+==========+====================+=====================+==========+============+========+====================
{}   | otel_test_dag_with_ | manual__2025-07-05T | 2025-07-05         | 2025-07-05          | None     | None               | 2025-07-05          | manual   | None       | queued | root
     | pause_between_tasks | 10:38:24.647029+00: | 10:38:29.260089+00 | 10:38:29.260089+00: |          |                    | 10:38:24+00:00      |          |            |        |
     |                     | 00                  | :00                | 00                  |          |                    |                     |          |            |        |

[2025-07-05T10:38:30.369+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:38:30.369+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:38:30.381+0000] {scheduler_job_runner.py:453} INFO - 1 tasks up for execution:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.task1 manual__2025-07-05T10:38:24.647029+00:00 [scheduled]>
[2025-07-05T10:38:30.381+0000] {scheduler_job_runner.py:525} INFO - DAG otel_test_dag_with_pause_between_tasks has 0/16 running and queued tasks
[2025-07-05T10:38:30.381+0000] {scheduler_job_runner.py:664} INFO - Setting the following tasks to queued state:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.task1 manual__2025-07-05T10:38:24.647029+00:00 [scheduled]>
[2025-07-05T10:38:30.383+0000] {scheduler_job_runner.py:749} INFO - Trying to enqueue tasks: [<TaskInstance: otel_test_dag_with_pause_between_tasks.task1 manual__2025-07-05T10:38:24.647029+00:00 [scheduled]>] for executor: CeleryExecutor(parallelism=32)
[2025-07-05T10:38:30.388+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:38:30.388+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
Control file not found. Waiting...
[2025-07-05T10:38:30.708+0000] {strategy.py:161} INFO - Task execute_workload[dcb9a4bc-bf44-4204-a90a-51eea724a8c4] received
[2025-07-05T10:38:30.717+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state queued for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='task1', run_id='manual__2025-07-05T10:38:24.647029+00:00', try_number=1, map_index=-1)
[2025-07-05T10:38:30.725+0000] {scheduler_job_runner.py:824} INFO - Setting external_id for <TaskInstance: otel_test_dag_with_pause_between_tasks.task1 manual__2025-07-05T10:38:24.647029+00:00 [queued]> to dcb9a4bc-bf44-4204-a90a-51eea724a8c4
[2025-07-05T10:38:32.277+0000] {celery_executor_utils.py:162} INFO - [dcb9a4bc-bf44-4204-a90a-51eea724a8c4] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da2a-88f9-7497-ba3d-7e7ba790912d'), task_id='task1', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:38:24.647029+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=3, executor_config=None, parent_context_carrier={'traceparent': '00-8608e5b0f5e695358fe33b66dd3b4b72-fecb9cfb2431be6a-01'}, context_carrier={'traceparent': '00-8608e5b0f5e695358fe33b66dd3b4b72-f7681f9a7ca60fc0-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:38:24.647029+00:00/task_id=task1/attempt=1.log' type='ExecuteTask'
2025-07-05 10:38:32 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:38:33.247+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2a-88f9-7497-ba3d-7e7ba790912d/run "HTTP/1.1 200 OK"
2025-07-05 10:38:33 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da2a-88f9-7497-ba3d-7e7ba790912d'), task_id='task1', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:38:24.647029+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=3, executor_config=None, parent_context_carrier={'traceparent': '00-8608e5b0f5e695358fe33b66dd3b4b72-fecb9cfb2431be6a-01'}, context_carrier={'traceparent': '00-8608e5b0f5e695358fe33b66dd3b4b72-f7681f9a7ca60fc0-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 38, 32, 312200, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:38:24.647029+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 38, 24, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 38, 29, 260089, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 38, 29, 260089, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 38, 29, 260089, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 38, 30, 351090, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:38:33.608+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2a-88f9-7497-ba3d-7e7ba790912d/heartbeat "HTTP/1.1 204 No Content"
Control file not found. Waiting...
2025-07-05 10:38:33 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:38:34.742+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2a-88f9-7497-ba3d-7e7ba790912d/rtif "HTTP/1.1 201 Created"
2025-07-05 10:38:34 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 38, 34, 823655, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:38:34.847+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2a-88f9-7497-ba3d-7e7ba790912d/state "HTTP/1.1 204 No Content"
2025-07-05 10:38:34 [info     ] Task finished                  [supervisor] duration=2.5549822950001726 exit_code=0 final_state=success
[2025-07-05T10:38:34.860+0000] {trace.py:128} INFO - Task execute_workload[dcb9a4bc-bf44-4204-a90a-51eea724a8c4] succeeded in 4.15138197899978s: None
[2025-07-05T10:38:35.409+0000] {scheduler_job_runner.py:453} INFO - 1 tasks up for execution:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:38:24.647029+00:00 [scheduled]>
[2025-07-05T10:38:35.409+0000] {scheduler_job_runner.py:525} INFO - DAG otel_test_dag_with_pause_between_tasks has 0/16 running and queued tasks
[2025-07-05T10:38:35.410+0000] {scheduler_job_runner.py:664} INFO - Setting the following tasks to queued state:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:38:24.647029+00:00 [scheduled]>
[2025-07-05T10:38:35.411+0000] {scheduler_job_runner.py:749} INFO - Trying to enqueue tasks: [<TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:38:24.647029+00:00 [scheduled]>] for executor: CeleryExecutor(parallelism=32)
[2025-07-05T10:38:35.412+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:38:35.412+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:38:35.414+0000] {strategy.py:161} INFO - Task execute_workload[6e448bb1-9571-4640-98be-e69c3aab43ba] received
[2025-07-05T10:38:35.420+0000] {celery_executor_utils.py:162} INFO - [6e448bb1-9571-4640-98be-e69c3aab43ba] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da2a-88fa-7eab-aaef-416d26cab96b'), task_id='paused_task', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:38:24.647029+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-8608e5b0f5e695358fe33b66dd3b4b72-fecb9cfb2431be6a-01'}, context_carrier={'traceparent': '00-8608e5b0f5e695358fe33b66dd3b4b72-130eb3ee48a2524c-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:38:24.647029+00:00/task_id=paused_task/attempt=1.log' type='ExecuteTask'
[2025-07-05T10:38:35.421+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state queued for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='paused_task', run_id='manual__2025-07-05T10:38:24.647029+00:00', try_number=1, map_index=-1)
[2025-07-05T10:38:35.421+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state success for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='task1', run_id='manual__2025-07-05T10:38:24.647029+00:00', try_number=1, map_index=-1)
[2025-07-05T10:38:35.425+0000] {scheduler_job_runner.py:824} INFO - Setting external_id for <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:38:24.647029+00:00 [queued]> to 6e448bb1-9571-4640-98be-e69c3aab43ba
[2025-07-05T10:38:35.426+0000] {scheduler_job_runner.py:834} INFO - TaskInstance Finished: dag_id=otel_test_dag_with_pause_between_tasks, task_id=task1, run_id=manual__2025-07-05T10:38:24.647029+00:00, map_index=-1, run_start_date=2025-07-05 10:38:32.312200+00:00, run_end_date=2025-07-05 10:38:34.823655+00:00, run_duration=2.511455, state=success, executor=CeleryExecutor(parallelism=32), executor_state=success, try_number=1, max_tries=0, pool=default_pool, queue=default, priority_weight=3, operator=_PythonDecoratedOperator, queued_dttm=2025-07-05 10:38:30.382273+00:00, scheduled_dttm=2025-07-05 10:38:30.370661+00:00,queued_by_job_id=3, pid=211
2025-07-05 10:38:35 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:38:35.471+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2a-88fa-7eab-aaef-416d26cab96b/run "HTTP/1.1 200 OK"
2025-07-05 10:38:35 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da2a-88fa-7eab-aaef-416d26cab96b'), task_id='paused_task', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:38:24.647029+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-8608e5b0f5e695358fe33b66dd3b4b72-fecb9cfb2431be6a-01'}, context_carrier={'traceparent': '00-8608e5b0f5e695358fe33b66dd3b4b72-130eb3ee48a2524c-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 38, 35, 455658, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:38:24.647029+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 38, 24, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 38, 29, 260089, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 38, 29, 260089, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 38, 29, 260089, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 38, 30, 351090, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={'task1': None}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:38:35.850+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2a-88fa-7eab-aaef-416d26cab96b/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:38:35 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:38:35.996+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2a-88fa-7eab-aaef-416d26cab96b/rtif "HTTP/1.1 201 Created"
[2025-07-05T10:38:36.649+0000] {test_otel.py:904} INFO - Control file exists and the task has been paused.
2025-07-05 10:38:37 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 38, 37, 68, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:38:37.011+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2a-88fa-7eab-aaef-416d26cab96b/state "HTTP/1.1 204 No Content"
2025-07-05 10:38:37 [info     ] Task finished                  [supervisor] duration=1.572593414999801 exit_code=0 final_state=success
[2025-07-05T10:38:37.025+0000] {trace.py:128} INFO - Task execute_workload[6e448bb1-9571-4640-98be-e69c3aab43ba] succeeded in 1.6094104979999884s: None
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:38:42.049+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:38:42.265+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:38:42.266+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:38:42.427+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:38:42.428+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:38:42.428+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used
[2025-07-05T10:38:42.494+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:38:42.494+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:38:42.499+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:38:42.499+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:38:42.500+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:38:42.500+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:38:42.524+0000] {scheduler_job_runner.py:453} INFO - 1 tasks up for execution:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.task2 manual__2025-07-05T10:38:24.647029+00:00 [scheduled]>
[2025-07-05T10:38:42.524+0000] {scheduler_job_runner.py:525} INFO - DAG otel_test_dag_with_pause_between_tasks has 0/16 running and queued tasks
[2025-07-05T10:38:42.524+0000] {scheduler_job_runner.py:664} INFO - Setting the following tasks to queued state:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.task2 manual__2025-07-05T10:38:24.647029+00:00 [scheduled]>
[2025-07-05T10:38:42.526+0000] {scheduler_job_runner.py:749} INFO - Trying to enqueue tasks: [<TaskInstance: otel_test_dag_with_pause_between_tasks.task2 manual__2025-07-05T10:38:24.647029+00:00 [scheduled]>] for executor: CeleryExecutor(parallelism=32)
[2025-07-05T10:38:42.532+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:38:42.532+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:38:42.835+0000] {strategy.py:161} INFO - Task execute_workload[3d153a79-90be-49d0-8e31-c9b274978bab] received
[2025-07-05T10:38:42.841+0000] {celery_executor_utils.py:162} INFO - [3d153a79-90be-49d0-8e31-c9b274978bab] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da2a-88fb-7cf9-b6d3-ded46ab62137'), task_id='task2', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:38:24.647029+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-1b354e0580a955d63c276c2340a53a9c-b72e7b1b5fd910bf-01'}, context_carrier={'traceparent': '00-1b354e0580a955d63c276c2340a53a9c-000182680cb10b4c-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:38:24.647029+00:00/task_id=task2/attempt=1.log' type='ExecuteTask'
[2025-07-05T10:38:42.844+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state queued for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='task2', run_id='manual__2025-07-05T10:38:24.647029+00:00', try_number=1, map_index=-1)
[2025-07-05T10:38:42.855+0000] {scheduler_job_runner.py:824} INFO - Setting external_id for <TaskInstance: otel_test_dag_with_pause_between_tasks.task2 manual__2025-07-05T10:38:24.647029+00:00 [queued]> to 3d153a79-90be-49d0-8e31-c9b274978bab
2025-07-05 10:38:42 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:38:42.912+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2a-88fb-7cf9-b6d3-ded46ab62137/run "HTTP/1.1 200 OK"
2025-07-05 10:38:42 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da2a-88fb-7cf9-b6d3-ded46ab62137'), task_id='task2', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:38:24.647029+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-1b354e0580a955d63c276c2340a53a9c-b72e7b1b5fd910bf-01'}, context_carrier={'traceparent': '00-1b354e0580a955d63c276c2340a53a9c-000182680cb10b4c-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 38, 42, 889490, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:38:24.647029+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 38, 24, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 38, 29, 260089, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 38, 29, 260089, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 38, 29, 260089, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 38, 30, 351090, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={'paused_task': None}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:38:43.288+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2a-88fb-7cf9-b6d3-ded46ab62137/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:38:43 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:38:43.436+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2a-88fb-7cf9-b6d3-ded46ab62137/rtif "HTTP/1.1 201 Created"
2025-07-05 10:38:43 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 38, 43, 440300, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:38:43.449+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2a-88fb-7cf9-b6d3-ded46ab62137/state "HTTP/1.1 204 No Content"
2025-07-05 10:38:43 [info     ] Task finished                  [supervisor] duration=0.5773693250000633 exit_code=0 final_state=success
[2025-07-05T10:38:43.462+0000] {trace.py:128} INFO - Task execute_workload[3d153a79-90be-49d0-8e31-c9b274978bab] succeeded in 0.6255990199999815s: None
[2025-07-05T10:38:43.910+0000] {dagrun.py:1203} INFO - Marking run <DagRun otel_test_dag_with_pause_between_tasks @ 2025-07-05 10:38:24+00:00: manual__2025-07-05T10:38:24.647029+00:00, state:running, queued_at: 2025-07-05 10:38:30.123130+00:00. run_type: manual> successful
[2025-07-05T10:38:43.911+0000] {dagrun.py:1253} INFO - DagRun Finished: dag_id=otel_test_dag_with_pause_between_tasks, logical_date=2025-07-05 10:38:24+00:00, run_id=manual__2025-07-05T10:38:24.647029+00:00, run_start_date=2025-07-05 10:38:30.351090+00:00, run_end_date=2025-07-05 10:38:43.911517+00:00, run_duration=13.560427, state=success, run_type=manual, data_interval_start=2025-07-05 10:38:29.260089+00:00, data_interval_end=2025-07-05 10:38:29.260089+00:00,
[2025-07-05T10:38:43.925+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state success for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='task2', run_id='manual__2025-07-05T10:38:24.647029+00:00', try_number=1, map_index=-1)
[2025-07-05T10:38:43.928+0000] {scheduler_job_runner.py:834} INFO - TaskInstance Finished: dag_id=otel_test_dag_with_pause_between_tasks, task_id=task2, run_id=manual__2025-07-05T10:38:24.647029+00:00, map_index=-1, run_start_date=2025-07-05 10:38:42.889490+00:00, run_end_date=2025-07-05 10:38:43.440300+00:00, run_duration=0.55081, state=success, executor=CeleryExecutor(parallelism=32), executor_state=success, try_number=1, max_tries=0, pool=default_pool, queue=default, priority_weight=1, operator=_PythonDecoratedOperator, queued_dttm=2025-07-05 10:38:42.525343+00:00, scheduled_dttm=2025-07-05 10:38:42.506072+00:00,queued_by_job_id=4, pid=229

worker: Warm shutdown (MainProcess)
{
    "name": "otel_test_dag_with_pause_between_tasks_recreated",
    "context": {
        "trace_id": "0x1b354e0580a955d63c276c2340a53a9c",
        "span_id": "0xb72e7b1b5fd910bf",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": null,
    "start_time": "2025-07-05T10:38:30.123130Z",
    "end_time": "2025-07-05T10:38:43.911517Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "airflow.category": "DAG runs",
        "airflow.dag_run.dag_id": "otel_test_dag_with_pause_between_tasks",
        "airflow.dag_run.logical_date": "2025-07-05 10:38:24+00:00",
        "airflow.dag_run.run_id": "manual__2025-07-05T10:38:24.647029+00:00",
        "airflow.dag_run.queued_at": "2025-07-05 10:38:30.123130+00:00",
        "airflow.dag_run.run_start_date": "2025-07-05 10:38:30.351090+00:00",
        "airflow.dag_run.run_end_date": "2025-07-05 10:38:43.911517+00:00",
        "airflow.dag_run.run_duration": "13.560427",
        "airflow.dag_run.state": "success",
        "airflow.dag_run.run_type": "manual",
        "airflow.dag_run.data_interval_start": "2025-07-05 10:38:29.260089+00:00",
        "airflow.dag_run.data_interval_end": "2025-07-05 10:38:29.260089+00:00",
        "airflow.dag_run.conf": "{}"
    },
    "events": [
        {
            "name": "airflow.dag_run.queued",
            "timestamp": "2025-07-05T10:38:30.123130Z",
            "attributes": {}
        },
        {
            "name": "airflow.dag_run.started",
            "timestamp": "2025-07-05T10:38:30.351090Z",
            "attributes": {}
        },
        {
            "name": "airflow.dag_run.ended",
            "timestamp": "2025-07-05T10:38:43.911517Z",
            "attributes": {}
        }
    ],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.27.0",
            "host.name": "b86782fa0b75",
            "service.name": "Airflow"
        },
        "schema_url": ""
    }
}
{
    "name": "task1_recreated",
    "context": {
        "trace_id": "0x1b354e0580a955d63c276c2340a53a9c",
        "span_id": "0x18dc618f3fdc8594",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xb72e7b1b5fd910bf",
    "start_time": "2025-07-05T10:38:30.382273Z",
    "end_time": "2025-07-05T10:38:34.823655Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "airflow.category": "scheduler",
        "airflow.task.id": "0197da2a-88f9-7497-ba3d-7e7ba790912d",
        "airflow.task.task_id": "task1",
        "airflow.task.dag_id": "otel_test_dag_with_pause_between_tasks",
        "airflow.task.state": "success",
        "airflow.task.error": false,
        "airflow.task.start_date": "2025-07-05 10:38:32.312200+00:00",
        "airflow.task.end_date": "2025-07-05 10:38:34.823655+00:00",
        "airflow.task.duration": 2.511455,
        "airflow.task.executor_config": "{}",
        "airflow.task.logical_date": "2025-07-05 10:38:24+00:00",
        "airflow.task.hostname": "b86782fa0b75",
        "airflow.task.log_url": "http://localhost:8080/dags/otel_test_dag_with_pause_between_tasks/runs/manual__2025-07-05T10%3A38%3A24.647029%2B00%3A00/tasks/task1?try_number=1",
        "airflow.task.operator": "_PythonDecoratedOperator",
        "airflow.task.try_number": 1,
        "airflow.task.executor_state": "success",
        "airflow.task.pool": "default_pool",
        "airflow.task.queue": "default",
        "airflow.task.priority_weight": 3,
        "airflow.task.queued_dttm": "2025-07-05 10:38:30.382273+00:00",
        "airflow.task.queued_by_job_id": 3,
        "airflow.task.pid": 211
    },
    "events": [
        {
            "name": "airflow.task.queued",
            "timestamp": "2025-07-05T10:38:30.382273Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.started",
            "timestamp": "2025-07-05T10:38:32.312200Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.ended",
            "timestamp": "2025-07-05T10:38:34.823655Z",
            "attributes": {}
        }
    ],
    "links": [
        {
            "context": {
                "trace_id": "0x1b354e0580a955d63c276c2340a53a9c",
                "span_id": "0xb72e7b1b5fd910bf",
                "trace_state": "[]"
            },
            "attributes": {
                "meta.annotation_type": "link",
                "from": "parenttrace"
            }
        }
    ],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.27.0",
            "host.name": "b86782fa0b75",
            "service.name": "Airflow"
        },
        "schema_url": ""
    }
}
{
    "name": "paused_task_recreated",
    "context": {
        "trace_id": "0x1b354e0580a955d63c276c2340a53a9c",
        "span_id": "0x53c3384a731fe77c",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xb72e7b1b5fd910bf",
    "start_time": "2025-07-05T10:38:35.410521Z",
    "end_time": "2025-07-05T10:38:37.000068Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "airflow.category": "scheduler",
        "airflow.task.id": "0197da2a-88fa-7eab-aaef-416d26cab96b",
        "airflow.task.task_id": "paused_task",
        "airflow.task.dag_id": "otel_test_dag_with_pause_between_tasks",
        "airflow.task.state": "success",
        "airflow.task.error": false,
        "airflow.task.start_date": "2025-07-05 10:38:35.455658+00:00",
        "airflow.task.end_date": "2025-07-05 10:38:37.000068+00:00",
        "airflow.task.duration": 1.54441,
        "airflow.task.executor_config": "{}",
        "airflow.task.logical_date": "2025-07-05 10:38:24+00:00",
        "airflow.task.hostname": "b86782fa0b75",
        "airflow.task.log_url": "http://localhost:8080/dags/otel_test_dag_with_pause_between_tasks/runs/manual__2025-07-05T10%3A38%3A24.647029%2B00%3A00/tasks/paused_task?try_number=1",
        "airflow.task.operator": "_PythonDecoratedOperator",
        "airflow.task.try_number": 1,
        "airflow.task.executor_state": "success",
        "airflow.task.pool": "default_pool",
        "airflow.task.queue": "default",
        "airflow.task.priority_weight": 2,
        "airflow.task.queued_dttm": "2025-07-05 10:38:35.410521+00:00",
        "airflow.task.queued_by_job_id": 3,
        "airflow.task.pid": 217
    },
    "events": [
        {
            "name": "airflow.task.queued",
            "timestamp": "2025-07-05T10:38:35.410521Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.started",
            "timestamp": "2025-07-05T10:38:35.455658Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.ended",
            "timestamp": "2025-07-05T10:38:37.000068Z",
            "attributes": {}
        }
    ],
    "links": [
        {
            "context": {
                "trace_id": "0x1b354e0580a955d63c276c2340a53a9c",
                "span_id": "0xb72e7b1b5fd910bf",
                "trace_state": "[]"
            },
            "attributes": {
                "meta.annotation_type": "link",
                "from": "parenttrace"
            }
        }
    ],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.27.0",
            "host.name": "b86782fa0b75",
            "service.name": "Airflow"
        },
        "schema_url": ""
    }
}
{
    "name": "task2",
    "context": {
        "trace_id": "0x1b354e0580a955d63c276c2340a53a9c",
        "span_id": "0x000182680cb10b4c",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xb72e7b1b5fd910bf",
    "start_time": "2025-07-05T10:38:42.532948Z",
    "end_time": "2025-07-05T10:38:43.440300Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "airflow.category": "scheduler",
        "airflow.task.id": "0197da2a-88fb-7cf9-b6d3-ded46ab62137",
        "airflow.task.task_id": "task2",
        "airflow.task.dag_id": "otel_test_dag_with_pause_between_tasks",
        "airflow.task.state": "success",
        "airflow.task.error": false,
        "airflow.task.start_date": "2025-07-05 10:38:42.889490+00:00",
        "airflow.task.end_date": "2025-07-05 10:38:43.440300+00:00",
        "airflow.task.duration": 0.55081,
        "airflow.task.executor_config": "{}",
        "airflow.task.logical_date": "2025-07-05 10:38:24+00:00",
        "airflow.task.hostname": "b86782fa0b75",
        "airflow.task.log_url": "http://localhost:8080/dags/otel_test_dag_with_pause_between_tasks/runs/manual__2025-07-05T10%3A38%3A24.647029%2B00%3A00/tasks/task2?try_number=1",
        "airflow.task.operator": "_PythonDecoratedOperator",
        "airflow.task.try_number": 1,
        "airflow.task.executor_state": "success",
        "airflow.task.pool": "default_pool",
        "airflow.task.queue": "default",
        "airflow.task.priority_weight": 1,
        "airflow.task.queued_dttm": "2025-07-05 10:38:42.525343+00:00",
        "airflow.task.queued_by_job_id": 4,
        "airflow.task.pid": 229
    },
    "events": [
        {
            "name": "airflow.task.queued",
            "timestamp": "2025-07-05T10:38:42.525343Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.started",
            "timestamp": "2025-07-05T10:38:42.889490Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.ended",
            "timestamp": "2025-07-05T10:38:43.440300Z",
            "attributes": {}
        }
    ],
    "links": [
        {
            "context": {
                "trace_id": "0x1b354e0580a955d63c276c2340a53a9c",
                "span_id": "0xb72e7b1b5fd910bf",
                "trace_state": "[]"
            },
            "attributes": {
                "meta.annotation_type": "link",
                "from": "parenttrace"
            }
        }
    ],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.27.0",
            "host.name": "b86782fa0b75",
            "service.name": "Airflow"
        },
        "schema_url": ""
    }
}
------------------------------------------------------------------------------------------ Captured stderr call ------------------------------------------------------------------------------------------
/usr/local/lib/python3.10/site-packages/celery/platforms.py:841 SecurityWarning: You're running the worker with superuser privileges: this is
absolutely not recommended!

Please specify a different user using the --uid option.

User information: uid=0 euid=0 gid=0 egid=0

------------------------------------------------------------------------------------------- Captured log call --------------------------------------------------------------------------------------------
INFO     integration.otel.test_otel:test_otel.py:904 Control file exists and the task has been paused.
__________________________________________________________ TestOtelIntegration.test_scheduler_exits_gracefully_in_the_middle_of_the_first_task ___________________________________________________________
airflow-core/tests/integration/otel/test_otel.py:1037: in test_scheduler_exits_gracefully_in_the_middle_of_the_first_task
    check_dag_run_state_and_span_status(
airflow-core/tests/integration/otel/test_otel.py:131: in check_dag_run_state_and_span_status
    assert dag_run.span_status == span_status, (
E   AssertionError: Dag Run span_status isn't needs_continuance. Span_status: active
E   assert equals failed
E     'active'                                             <SpanStatus.NEEDS_CONTINUANCE: 'needs_continuance'>

During handling of the above exception, another exception occurred:
airflow-core/tests/integration/otel/test_otel.py:1067: in test_scheduler_exits_gracefully_in_the_middle_of_the_first_task
    celery_worker_process.wait()
/usr/local/lib/python3.10/subprocess.py:1209: in wait
    return self._wait(timeout=timeout)
/usr/local/lib/python3.10/subprocess.py:1959: in _wait
    (pid, sts) = self._try_wait(0)
/usr/local/lib/python3.10/subprocess.py:1917: in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
E   Failed: Timeout >90.0s
------------------------------------------------------------------------------------------ Captured stdout call ------------------------------------------------------------------------------------------
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:39:45.759+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:39:46.005+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:39:46.005+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:39:46.017+0000] {scheduler_job_runner.py:2153} INFO - Marked 1 SchedulerJob instances as failed
[2025-07-05T10:39:46.179+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:39:46.180+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:39:46.180+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used

 -------------- celery@b86782fa0b75 v5.5.3 (immunity)
--- ***** -----
-- ******* ---- Linux-6.8.0-1029-azure-x86_64-with-glibc2.36 2025-07-05 10:39:47
- *** --- * ---
- ** ---------- [config]
- ** ---------- .> app:         airflow.providers.celery.executors.celery_executor:0x7f1ffb446f50
- ** ---------- .> transport:   redis://redis:6379/0
- ** ---------- .> results:     ***postgres/airflow
- *** --- * --- .> concurrency: 1 (prefork)
-- ******* ---- .> task events: OFF (enable -E to monitor tasks in this worker)
--- ***** -----
 -------------- [queues]
                .> default          exchange=default(direct) key=default


[tasks]
  . execute_workload

[2025-07-05T10:39:47.802+0000] {connection.py:22} INFO - Connected to redis://redis:6379/0
[2025-07-05T10:39:47.807+0000] {mingle.py:40} INFO - mingle: searching for neighbors
[2025-07-05T10:39:48.814+0000] {mingle.py:49} INFO - mingle: all alone
[2025-07-05T10:39:48.823+0000] {worker.py:176} INFO - celery@b86782fa0b75 ready.
No paused DAGs were found
     |                     |                     | data_interval_star |                     |          | last_scheduling_de |                     |          |            |        | triggering_user_nam
conf | dag_id              | dag_run_id          | t                  | data_interval_end   | end_date | cision             | logical_date        | run_type | start_date | state  | e
=====+=====================+=====================+====================+=====================+==========+====================+=====================+==========+============+========+====================
{}   | otel_test_dag_with_ | manual__2025-07-05T | 2025-07-05         | 2025-07-05          | None     | None               | 2025-07-05          | manual   | None       | queued | root
     | pause_in_task       | 10:39:55.039475+00: | 10:39:59.673718+00 | 10:39:59.673718+00: |          |                    | 10:39:55+00:00      |          |            |        |
     |                     | 00                  | :00                | 00                  |          |                    |                     |          |            |        |

[2025-07-05T10:40:00.621+0000] {strategy.py:161} INFO - Task execute_workload[de639ec8-f09c-43db-94cf-192142e26e2c] received
Control file not found. Waiting...
[2025-07-05T10:40:02.265+0000] {celery_executor_utils.py:162} INFO - [de639ec8-f09c-43db-94cf-192142e26e2c] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da2b-ea1a-7698-bb3c-4a3b9bbaa567'), task_id='task1', dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:39:55.039475+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-271cbd00f94a436d598a5795016757c7-4ba365631e4c7fb5-01'}, context_carrier={'traceparent': '00-271cbd00f94a436d598a5795016757c7-be0cfaafa07be569-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_in_task.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_in_task/run_id=manual__2025-07-05T10:39:55.039475+00:00/task_id=task1/attempt=1.log' type='ExecuteTask'
2025-07-05 10:40:02 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:40:02.320+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/run "HTTP/1.1 200 OK"
2025-07-05 10:40:02 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da2b-ea1a-7698-bb3c-4a3b9bbaa567'), task_id='task1', dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:39:55.039475+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-271cbd00f94a436d598a5795016757c7-4ba365631e4c7fb5-01'}, context_carrier={'traceparent': '00-271cbd00f94a436d598a5795016757c7-be0cfaafa07be569-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_in_task.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 40, 2, 297985, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:39:55.039475+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 39, 55, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 39, 59, 673718, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 39, 59, 673718, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 39, 59, 673718, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 40, 0, 590257, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:40:02.700+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:40:02 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:40:02.847+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/rtif "HTTP/1.1 201 Created"
[2025-07-05T10:40:04.057+0000] {test_otel.py:1021} INFO - Control file exists and the task has been paused.
[2025-07-05T10:40:04.057+0000] {scheduler_job_runner.py:290} INFO - Exiting gracefully upon receiving signal 15
[2025-07-05T10:40:04.058+0000] {scheduler_job_runner.py:1011} INFO - Exited execute loop

worker: Warm shutdown (MainProcess)
[2025-07-05T10:40:07.864+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:40:12.871+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:40:17.878+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:40:22.884+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:40:27.891+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:40:32.897+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:40:37.903+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:40:42.910+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:40:47.916+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:40:52.922+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:40:57.930+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:41:02.935+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:41:07.942+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2b-ea1a-7698-bb3c-4a3b9bbaa567/heartbeat "HTTP/1.1 204 No Content"
------------------------------------------------------------------------------------------ Captured stderr call ------------------------------------------------------------------------------------------
/usr/local/lib/python3.10/site-packages/celery/platforms.py:841 SecurityWarning: You're running the worker with superuser privileges: this is
absolutely not recommended!

Please specify a different user using the --uid option.

User information: uid=0 euid=0 gid=0 egid=0

------------------------------------------------------------------------------------------- Captured log call --------------------------------------------------------------------------------------------
INFO     integration.otel.test_otel:test_otel.py:1021 Control file exists and the task has been paused.
__________________________________________________________ TestOtelIntegration.test_scheduler_exits_forcefully_in_the_middle_of_the_first_task ___________________________________________________________
airflow-core/tests/integration/otel/test_otel.py:1157: in test_scheduler_exits_forcefully_in_the_middle_of_the_first_task
    wait_for_dag_run_and_check_span_status(
airflow-core/tests/integration/otel/test_otel.py:114: in wait_for_dag_run_and_check_span_status
    assert dag_run_span_status == span_status, (
E   AssertionError: Dag run span status isn't ended as expected.Actual status: should_end.
E   assert equals failed
E     'should_end'                 <SpanStatus.ENDED: 'ended'>
------------------------------------------------------------------------------------------ Captured stdout call ------------------------------------------------------------------------------------------
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:41:16.026+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:41:16.394+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:41:16.394+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:41:16.651+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:41:16.652+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:41:16.653+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used
[2025-07-05T10:41:16.764+0000] {dagrun.py:1174} INFO - Marking run <DagRun otel_test_dag_with_pause_in_task @ 2025-07-05 10:39:55+00:00: manual__2025-07-05T10:39:55.039475+00:00, state:running, queued_at: 2025-07-05 10:40:00.525280+00:00. run_type: manual> failed
[2025-07-05T10:41:16.765+0000] {dagrun.py:1253} INFO - DagRun Finished: dag_id=otel_test_dag_with_pause_in_task, logical_date=2025-07-05 10:39:55+00:00, run_id=manual__2025-07-05T10:39:55.039475+00:00, run_start_date=2025-07-05 10:40:00.590257+00:00, run_end_date=2025-07-05 10:41:16.765124+00:00, run_duration=76.174867, state=failed, run_type=manual, data_interval_start=2025-07-05 10:39:59.673718+00:00, data_interval_end=2025-07-05 10:39:59.673718+00:00,

 -------------- celery@b86782fa0b75 v5.5.3 (immunity)
--- ***** -----
-- ******* ---- Linux-6.8.0-1029-azure-x86_64-with-glibc2.36 2025-07-05 10:41:17
- *** --- * ---
- ** ---------- [config]
- ** ---------- .> app:         airflow.providers.celery.executors.celery_executor:0x7f8ffedc7430
- ** ---------- .> transport:   redis://redis:6379/0
- ** ---------- .> results:     ***postgres/airflow
- *** --- * --- .> concurrency: 1 (prefork)
-- ******* ---- .> task events: OFF (enable -E to monitor tasks in this worker)
--- ***** -----
 -------------- [queues]
                .> default          exchange=default(direct) key=default


[tasks]
  . execute_workload

[2025-07-05T10:41:17.790+0000] {connection.py:22} INFO - Connected to redis://redis:6379/0
[2025-07-05T10:41:17.794+0000] {mingle.py:40} INFO - mingle: searching for neighbors
[2025-07-05T10:41:18.803+0000] {mingle.py:49} INFO - mingle: all alone
[2025-07-05T10:41:18.815+0000] {worker.py:176} INFO - celery@b86782fa0b75 ready.
No paused DAGs were found
     |                     |                     | data_interval_star |                     |          | last_scheduling_de |                     |          |            |        | triggering_user_nam
conf | dag_id              | dag_run_id          | t                  | data_interval_end   | end_date | cision             | logical_date        | run_type | start_date | state  | e
=====+=====================+=====================+====================+=====================+==========+====================+=====================+==========+============+========+====================
{}   | otel_test_dag_with_ | manual__2025-07-05T | 2025-07-05         | 2025-07-05          | None     | None               | 2025-07-05          | manual   | None       | queued | root
     | pause_in_task       | 10:41:25.122246+00: | 10:41:29.749724+00 | 10:41:29.749724+00: |          |                    | 10:41:25+00:00      |          |            |        |
     |                     | 00                  | :00                | 00                  |          |                    |                     |          |            |        |

Control file not found. Waiting...
[2025-07-05T10:41:31.213+0000] {strategy.py:161} INFO - Task execute_workload[ddd5d313-3f6e-4af1-af75-ee11a6613c29] received
[2025-07-05T10:41:32.844+0000] {celery_executor_utils.py:162} INFO - [ddd5d313-3f6e-4af1-af75-ee11a6613c29] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da2d-4a0a-7064-a020-97597b5614b6'), task_id='task1', dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:41:25.122246+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-81e7755eb239b9e5876f24e7f8e5e35b-090e6ae254e0b4ad-01'}, context_carrier={'traceparent': '00-81e7755eb239b9e5876f24e7f8e5e35b-ebd1b85906698ce6-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_in_task.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_in_task/run_id=manual__2025-07-05T10:41:25.122246+00:00/task_id=task1/attempt=1.log' type='ExecuteTask'
2025-07-05 10:41:32 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:41:32.898+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2d-4a0a-7064-a020-97597b5614b6/run "HTTP/1.1 200 OK"
2025-07-05 10:41:32 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da2d-4a0a-7064-a020-97597b5614b6'), task_id='task1', dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:41:25.122246+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-81e7755eb239b9e5876f24e7f8e5e35b-090e6ae254e0b4ad-01'}, context_carrier={'traceparent': '00-81e7755eb239b9e5876f24e7f8e5e35b-ebd1b85906698ce6-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_in_task.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 41, 32, 876837, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:41:25.122246+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 41, 25, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 41, 29, 749724, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 41, 29, 749724, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 41, 29, 749724, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 41, 31, 190634, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:41:33.271+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2d-4a0a-7064-a020-97597b5614b6/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:41:33 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:41:33.420+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2d-4a0a-7064-a020-97597b5614b6/rtif "HTTP/1.1 201 Created"
[2025-07-05T10:41:34.097+0000] {test_otel.py:1121} INFO - Control file exists and the task has been paused.
[2025-07-05T10:41:38.437+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2d-4a0a-7064-a020-97597b5614b6/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:41:43.443+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2d-4a0a-7064-a020-97597b5614b6/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:41:48.450+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2d-4a0a-7064-a020-97597b5614b6/heartbeat "HTTP/1.1 204 No Content"
[2025-07-05T10:41:53.457+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2d-4a0a-7064-a020-97597b5614b6/heartbeat "HTTP/1.1 204 No Content"
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:41:54.630+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:41:54.843+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:41:54.843+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:41:54.846+0000] {scheduler_job_runner.py:2153} INFO - Marked 1 SchedulerJob instances as failed
[2025-07-05T10:41:55.005+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:41:55.005+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:41:55.006+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used
[2025-07-05T10:41:58.462+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2d-4a0a-7064-a020-97597b5614b6/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:41:59 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 41, 59, 568020, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:41:59.587+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2d-4a0a-7064-a020-97597b5614b6/state "HTTP/1.1 204 No Content"
2025-07-05 10:41:59 [info     ] Task finished                  [supervisor] duration=26.73079433299995 exit_code=0 final_state=success
[2025-07-05T10:41:59.602+0000] {trace.py:128} INFO - Task execute_workload[ddd5d313-3f6e-4af1-af75-ee11a6613c29] succeeded in 28.3880407449999s: None
[2025-07-05T10:41:59.886+0000] {scheduler_job_runner.py:453} INFO - 1 tasks up for execution:
    <TaskInstance: otel_test_dag_with_pause_in_task.task2 manual__2025-07-05T10:41:25.122246+00:00 [scheduled]>
[2025-07-05T10:41:59.887+0000] {scheduler_job_runner.py:525} INFO - DAG otel_test_dag_with_pause_in_task has 0/16 running and queued tasks
[2025-07-05T10:41:59.887+0000] {scheduler_job_runner.py:664} INFO - Setting the following tasks to queued state:
    <TaskInstance: otel_test_dag_with_pause_in_task.task2 manual__2025-07-05T10:41:25.122246+00:00 [scheduled]>
[2025-07-05T10:41:59.889+0000] {scheduler_job_runner.py:749} INFO - Trying to enqueue tasks: [<TaskInstance: otel_test_dag_with_pause_in_task.task2 manual__2025-07-05T10:41:25.122246+00:00 [scheduled]>] for executor: CeleryExecutor(parallelism=32)
[2025-07-05T10:41:59.894+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:41:59.895+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:42:00.249+0000] {strategy.py:161} INFO - Task execute_workload[5b5993df-5354-4ca0-ae3a-10e5d1490f43] received
[2025-07-05T10:42:00.254+0000] {celery_executor_utils.py:162} INFO - [5b5993df-5354-4ca0-ae3a-10e5d1490f43] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da2d-4a0b-7310-b4d2-e8086537253c'), task_id='task2', dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:41:25.122246+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-81e7755eb239b9e5876f24e7f8e5e35b-090e6ae254e0b4ad-01'}, context_carrier={'traceparent': '00-81e7755eb239b9e5876f24e7f8e5e35b-d565848dc9d355bf-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_in_task.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_in_task/run_id=manual__2025-07-05T10:41:25.122246+00:00/task_id=task2/attempt=1.log' type='ExecuteTask'
[2025-07-05T10:42:00.260+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state queued for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_in_task', task_id='task2', run_id='manual__2025-07-05T10:41:25.122246+00:00', try_number=1, map_index=-1)
[2025-07-05T10:42:00.270+0000] {scheduler_job_runner.py:824} INFO - Setting external_id for <TaskInstance: otel_test_dag_with_pause_in_task.task2 manual__2025-07-05T10:41:25.122246+00:00 [queued]> to 5b5993df-5354-4ca0-ae3a-10e5d1490f43
2025-07-05 10:42:00 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:42:00.317+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2d-4a0b-7310-b4d2-e8086537253c/run "HTTP/1.1 200 OK"
2025-07-05 10:42:00 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da2d-4a0b-7310-b4d2-e8086537253c'), task_id='task2', dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:41:25.122246+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-81e7755eb239b9e5876f24e7f8e5e35b-090e6ae254e0b4ad-01'}, context_carrier={'traceparent': '00-81e7755eb239b9e5876f24e7f8e5e35b-d565848dc9d355bf-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_in_task.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 42, 0, 298064, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_in_task', run_id='manual__2025-07-05T10:41:25.122246+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 41, 25, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 41, 29, 749724, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 41, 29, 749724, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 41, 29, 749724, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 41, 31, 190634, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={'task1': None}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:42:00.782+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2d-4a0b-7310-b4d2-e8086537253c/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:42:00 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:42:00.960+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2d-4a0b-7310-b4d2-e8086537253c/rtif "HTTP/1.1 201 Created"
2025-07-05 10:42:00 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 42, 0, 963286, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:42:00.974+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2d-4a0b-7310-b4d2-e8086537253c/state "HTTP/1.1 204 No Content"
2025-07-05 10:42:00 [info     ] Task finished                  [supervisor] duration=0.6973704939998697 exit_code=0 final_state=success
[2025-07-05T10:42:00.991+0000] {trace.py:128} INFO - Task execute_workload[5b5993df-5354-4ca0-ae3a-10e5d1490f43] succeeded in 0.7404665169999589s: None
[2025-07-05T10:42:01.336+0000] {dagrun.py:1203} INFO - Marking run <DagRun otel_test_dag_with_pause_in_task @ 2025-07-05 10:41:25+00:00: manual__2025-07-05T10:41:25.122246+00:00, state:running, queued_at: 2025-07-05 10:41:30.621390+00:00. run_type: manual> successful
[2025-07-05T10:42:01.337+0000] {dagrun.py:1253} INFO - DagRun Finished: dag_id=otel_test_dag_with_pause_in_task, logical_date=2025-07-05 10:41:25+00:00, run_id=manual__2025-07-05T10:41:25.122246+00:00, run_start_date=2025-07-05 10:41:31.190634+00:00, run_end_date=2025-07-05 10:42:01.336933+00:00, run_duration=30.146299, state=success, run_type=manual, data_interval_start=2025-07-05 10:41:29.749724+00:00, data_interval_end=2025-07-05 10:41:29.749724+00:00,

worker: Warm shutdown (MainProcess)
[2025-07-05T10:42:01.350+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state success for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_in_task', task_id='task2', run_id='manual__2025-07-05T10:41:25.122246+00:00', try_number=1, map_index=-1)
[2025-07-05T10:42:01.354+0000] {scheduler_job_runner.py:834} INFO - TaskInstance Finished: dag_id=otel_test_dag_with_pause_in_task, task_id=task2, run_id=manual__2025-07-05T10:41:25.122246+00:00, map_index=-1, run_start_date=2025-07-05 10:42:00.298064+00:00, run_end_date=2025-07-05 10:42:00.963286+00:00, run_duration=0.665222, state=success, executor=CeleryExecutor(parallelism=32), executor_state=success, try_number=1, max_tries=0, pool=default_pool, queue=default, priority_weight=1, operator=_PythonDecoratedOperator, queued_dttm=2025-07-05 10:41:59.887785+00:00, scheduled_dttm=2025-07-05 10:41:59.875129+00:00,queued_by_job_id=7, pid=297
[2025-07-05T10:42:04.104+0000] {scheduler_job_runner.py:290} INFO - Exiting gracefully upon receiving signal 15
[2025-07-05T10:42:04.105+0000] {scheduler_job_runner.py:1011} INFO - Exited execute loop
{
    "name": "task2",
    "context": {
        "trace_id": "0x81e7755eb239b9e5876f24e7f8e5e35b",
        "span_id": "0xd565848dc9d355bf",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x090e6ae254e0b4ad",
    "start_time": "2025-07-05T10:41:59.895834Z",
    "end_time": "2025-07-05T10:42:00.963286Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "airflow.category": "scheduler",
        "airflow.task.id": "0197da2d-4a0b-7310-b4d2-e8086537253c",
        "airflow.task.task_id": "task2",
        "airflow.task.dag_id": "otel_test_dag_with_pause_in_task",
        "airflow.task.state": "success",
        "airflow.task.error": false,
        "airflow.task.start_date": "2025-07-05 10:42:00.298064+00:00",
        "airflow.task.end_date": "2025-07-05 10:42:00.963286+00:00",
        "airflow.task.duration": 0.665222,
        "airflow.task.executor_config": "{}",
        "airflow.task.logical_date": "2025-07-05 10:41:25+00:00",
        "airflow.task.hostname": "b86782fa0b75",
        "airflow.task.log_url": "http://localhost:8080/dags/otel_test_dag_with_pause_in_task/runs/manual__2025-07-05T10%3A41%3A25.122246%2B00%3A00/tasks/task2?try_number=1",
        "airflow.task.operator": "_PythonDecoratedOperator",
        "airflow.task.try_number": 1,
        "airflow.task.executor_state": "success",
        "airflow.task.pool": "default_pool",
        "airflow.task.queue": "default",
        "airflow.task.priority_weight": 1,
        "airflow.task.queued_dttm": "2025-07-05 10:41:59.887785+00:00",
        "airflow.task.queued_by_job_id": 7,
        "airflow.task.pid": 297
    },
    "events": [
        {
            "name": "airflow.task.queued",
            "timestamp": "2025-07-05T10:41:59.887785Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.started",
            "timestamp": "2025-07-05T10:42:00.298064Z",
            "attributes": {}
        },
        {
            "name": "airflow.task.ended",
            "timestamp": "2025-07-05T10:42:00.963286Z",
            "attributes": {}
        }
    ],
    "links": [
        {
            "context": {
                "trace_id": "0x81e7755eb239b9e5876f24e7f8e5e35b",
                "span_id": "0x090e6ae254e0b4ad",
                "trace_state": "[]"
            },
            "attributes": {
                "meta.annotation_type": "link",
                "from": "parenttrace"
            }
        }
    ],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.27.0",
            "host.name": "b86782fa0b75",
            "service.name": "Airflow"
        },
        "schema_url": ""
    }
}
------------------------------------------------------------------------------------------ Captured stderr call ------------------------------------------------------------------------------------------
/usr/local/lib/python3.10/site-packages/celery/platforms.py:841 SecurityWarning: You're running the worker with superuser privileges: this is
absolutely not recommended!

Please specify a different user using the --uid option.

User information: uid=0 euid=0 gid=0 egid=0

------------------------------------------------------------------------------------------- Captured log call --------------------------------------------------------------------------------------------
INFO     integration.otel.test_otel:test_otel.py:1121 Control file exists and the task has been paused.
___________________________________________________________ TestOtelIntegration.test_scheduler_exits_forcefully_after_the_first_task_finishes ____________________________________________________________
airflow-core/tests/integration/otel/test_otel.py:1259: in test_scheduler_exits_forcefully_after_the_first_task_finishes
    wait_for_dag_run_and_check_span_status(
airflow-core/tests/integration/otel/test_otel.py:114: in wait_for_dag_run_and_check_span_status
    assert dag_run_span_status == span_status, (
E   AssertionError: Dag run span status isn't ended as expected.Actual status: should_end.
E   assert equals failed
E     'should_end'                 <SpanStatus.ENDED: 'ended'>
------------------------------------------------------------------------------------------ Captured stdout call ------------------------------------------------------------------------------------------

 -------------- celery@b86782fa0b75 v5.5.3 (immunity)
--- ***** -----
-- ******* ---- Linux-6.8.0-1029-azure-x86_64-with-glibc2.36 2025-07-05 10:42:10
- *** --- * ---
- ** ---------- [config]
- ** ---------- .> app:         airflow.providers.celery.executors.celery_executor:0x7f7c10122200
- ** ---------- .> transport:   redis://redis:6379/0
- ** ---------- .> results:     ***postgres/airflow
- *** --- * --- .> concurrency: 1 (prefork)
-- ******* ---- .> task events: OFF (enable -E to monitor tasks in this worker)
--- ***** -----
 -------------- [queues]
                .> default          exchange=default(direct) key=default


[tasks]
  . execute_workload

[2025-07-05T10:42:10.373+0000] {connection.py:22} INFO - Connected to redis://redis:6379/0
[2025-07-05T10:42:10.380+0000] {mingle.py:40} INFO - mingle: searching for neighbors
[2025-07-05T10:42:11.389+0000] {mingle.py:49} INFO - mingle: all alone
[2025-07-05T10:42:11.401+0000] {worker.py:176} INFO - celery@b86782fa0b75 ready.
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:42:12.166+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:42:12.379+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:42:12.379+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:42:12.544+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:42:12.545+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:42:12.545+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used
No paused DAGs were found
     |                     |                     | data_interval_star |                     |          | last_scheduling_de |                     |          |            |        | triggering_user_nam
conf | dag_id              | dag_run_id          | t                  | data_interval_end   | end_date | cision             | logical_date        | run_type | start_date | state  | e
=====+=====================+=====================+====================+=====================+==========+====================+=====================+==========+============+========+====================
{}   | otel_test_dag_with_ | manual__2025-07-05T | 2025-07-05         | 2025-07-05          | None     | None               | 2025-07-05          | manual   | None       | queued | root
     | pause_between_tasks | 10:42:19.591073+00: | 10:42:24.195466+00 | 10:42:24.195466+00: |          |                    | 10:42:19+00:00      |          |            |        |
     |                     | 00                  | :00                | 00                  |          |                    |                     |          |            |        |

[2025-07-05T10:42:25.500+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:42:25.500+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
[2025-07-05T10:42:25.515+0000] {strategy.py:161} INFO - Task execute_workload[04913e02-84bf-4778-a2ed-084c4cf13dbc] received
Control file not found. Waiting...
[2025-07-05T10:42:27.138+0000] {celery_executor_utils.py:162} INFO - [04913e02-84bf-4778-a2ed-084c4cf13dbc] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da2e-1eac-7c68-bc62-63f54f239d96'), task_id='task1', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:42:19.591073+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=3, executor_config=None, parent_context_carrier={'traceparent': '00-00e3acbdc1f41e05ab8c0ea6422ec3ea-a0627cddc7cae321-01'}, context_carrier={'traceparent': '00-00e3acbdc1f41e05ab8c0ea6422ec3ea-c35cb2f762bda2ed-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:42:19.591073+00:00/task_id=task1/attempt=1.log' type='ExecuteTask'
2025-07-05 10:42:27 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:42:27.190+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2e-1eac-7c68-bc62-63f54f239d96/run "HTTP/1.1 200 OK"
2025-07-05 10:42:27 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da2e-1eac-7c68-bc62-63f54f239d96'), task_id='task1', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:42:19.591073+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=3, executor_config=None, parent_context_carrier={'traceparent': '00-00e3acbdc1f41e05ab8c0ea6422ec3ea-a0627cddc7cae321-01'}, context_carrier={'traceparent': '00-00e3acbdc1f41e05ab8c0ea6422ec3ea-c35cb2f762bda2ed-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 42, 27, 169602, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:42:19.591073+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 42, 19, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 42, 24, 195466, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 42, 24, 195466, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 42, 24, 195466, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 42, 25, 477526, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:42:27.608+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2e-1eac-7c68-bc62-63f54f239d96/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:42:27 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:42:27.778+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2e-1eac-7c68-bc62-63f54f239d96/rtif "HTTP/1.1 201 Created"
2025-07-05 10:42:27 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 42, 27, 857057, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:42:27.873+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2e-1eac-7c68-bc62-63f54f239d96/state "HTTP/1.1 204 No Content"
2025-07-05 10:42:27 [info     ] Task finished                  [supervisor] duration=0.7236318990001109 exit_code=0 final_state=success
[2025-07-05T10:42:27.887+0000] {trace.py:128} INFO - Task execute_workload[04913e02-84bf-4778-a2ed-084c4cf13dbc] succeeded in 2.3713937170000463s: None
[2025-07-05T10:42:28.453+0000] {scheduler_job_runner.py:453} INFO - 1 tasks up for execution:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:42:19.591073+00:00 [scheduled]>
[2025-07-05T10:42:28.453+0000] {scheduler_job_runner.py:525} INFO - DAG otel_test_dag_with_pause_between_tasks has 0/16 running and queued tasks
[2025-07-05T10:42:28.453+0000] {scheduler_job_runner.py:664} INFO - Setting the following tasks to queued state:
    <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:42:19.591073+00:00 [scheduled]>
[2025-07-05T10:42:28.455+0000] {scheduler_job_runner.py:749} INFO - Trying to enqueue tasks: [<TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:42:19.591073+00:00 [scheduled]>] for executor: CeleryExecutor(parallelism=32)
[2025-07-05T10:42:28.459+0000] {otel_tracer.py:102} INFO - [ConsoleSpanExporter] is being used
[2025-07-05T10:42:28.460+0000] {otel_tracer.py:107} INFO - [BatchSpanProcessor] is being used
Control file not found. Waiting...
[2025-07-05T10:42:28.764+0000] {strategy.py:161} INFO - Task execute_workload[6a7f0cfe-f15d-484d-8605-489a4adfa376] received
[2025-07-05T10:42:28.770+0000] {celery_executor_utils.py:162} INFO - [6a7f0cfe-f15d-484d-8605-489a4adfa376] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da2e-1ead-74d6-a4ff-7f2f006c5507'), task_id='paused_task', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:42:19.591073+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-00e3acbdc1f41e05ab8c0ea6422ec3ea-a0627cddc7cae321-01'}, context_carrier={'traceparent': '00-00e3acbdc1f41e05ab8c0ea6422ec3ea-bccd0b4f0fb62196-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:42:19.591073+00:00/task_id=paused_task/attempt=1.log' type='ExecuteTask'
[2025-07-05T10:42:28.773+0000] {scheduler_job_runner.py:792} INFO - Received executor event with state queued for task instance TaskInstanceKey(dag_id='otel_test_dag_with_pause_between_tasks', task_id='paused_task', run_id='manual__2025-07-05T10:42:19.591073+00:00', try_number=1, map_index=-1)
[2025-07-05T10:42:28.784+0000] {scheduler_job_runner.py:824} INFO - Setting external_id for <TaskInstance: otel_test_dag_with_pause_between_tasks.paused_task manual__2025-07-05T10:42:19.591073+00:00 [queued]> to 6a7f0cfe-f15d-484d-8605-489a4adfa376
2025-07-05 10:42:28 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:42:28.829+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2e-1ead-74d6-a4ff-7f2f006c5507/run "HTTP/1.1 200 OK"
2025-07-05 10:42:28 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da2e-1ead-74d6-a4ff-7f2f006c5507'), task_id='paused_task', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:42:19.591073+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=2, executor_config=None, parent_context_carrier={'traceparent': '00-00e3acbdc1f41e05ab8c0ea6422ec3ea-a0627cddc7cae321-01'}, context_carrier={'traceparent': '00-00e3acbdc1f41e05ab8c0ea6422ec3ea-bccd0b4f0fb62196-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 42, 28, 812022, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:42:19.591073+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 42, 19, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 42, 24, 195466, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 42, 24, 195466, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 42, 24, 195466, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 42, 25, 477526, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={'task1': None}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:42:29.208+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2e-1ead-74d6-a4ff-7f2f006c5507/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:42:29 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:42:29.358+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2e-1ead-74d6-a4ff-7f2f006c5507/rtif "HTTP/1.1 201 Created"
[2025-07-05T10:42:31.568+0000] {test_otel.py:1223} INFO - Control file exists and the task has been paused.
2025-07-05 10:42:32 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 42, 32, 365725, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:42:32.376+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2e-1ead-74d6-a4ff-7f2f006c5507/state "HTTP/1.1 204 No Content"
2025-07-05 10:42:32 [info     ] Task finished                  [supervisor] duration=3.5808370059999106 exit_code=0 final_state=success
[2025-07-05T10:42:32.389+0000] {trace.py:128} INFO - Task execute_workload[6a7f0cfe-f15d-484d-8605-489a4adfa376] succeeded in 3.623209581000083s: None
[2025-07-05T10:42:32.625+0000] {strategy.py:161} INFO - Task execute_workload[408939e4-b045-4287-9d03-4b2b32a9b2c4] received
[2025-07-05T10:42:32.630+0000] {celery_executor_utils.py:162} INFO - [408939e4-b045-4287-9d03-4b2b32a9b2c4] Executing workload in Celery: token='***' ti=TaskInstance(id=UUID('0197da2e-1eae-7140-b252-d527b5623293'), task_id='task2', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:42:19.591073+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-00e3acbdc1f41e05ab8c0ea6422ec3ea-a0627cddc7cae321-01'}, context_carrier={'traceparent': '00-00e3acbdc1f41e05ab8c0ea6422ec3ea-feee118d5fcb5528-01'}) dag_rel_path=PurePosixPath('/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py') bundle_info=BundleInfo(name='testing', version=None) log_path='dag_id=otel_test_dag_with_pause_between_tasks/run_id=manual__2025-07-05T10:42:19.591073+00:00/task_id=task2/attempt=1.log' type='ExecuteTask'
2025-07-05 10:42:32 [info     ] Secrets backends loaded for worker [supervisor] backend_classes=['EnvironmentVariablesBackend'] count=1
[2025-07-05T10:42:32.679+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2e-1eae-7140-b252-d527b5623293/run "HTTP/1.1 200 OK"
2025-07-05 10:42:32 [debug    ] Sending                        [supervisor] msg=StartupDetails(ti=TaskInstance(id=UUID('0197da2e-1eae-7140-b252-d527b5623293'), task_id='task2', dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:42:19.591073+00:00', try_number=1, map_index=-1, pool_slots=1, queue='default', priority_weight=1, executor_config=None, parent_context_carrier={'traceparent': '00-00e3acbdc1f41e05ab8c0ea6422ec3ea-a0627cddc7cae321-01'}, context_carrier={'traceparent': '00-00e3acbdc1f41e05ab8c0ea6422ec3ea-feee118d5fcb5528-01'}), dag_rel_path='/opt/airflow/airflow-core/tests/integration/otel/dags/otel_test_dag_with_pause_between_tasks.py', bundle_info=BundleInfo(name='testing', version=None), start_date=datetime.datetime(2025, 7, 5, 10, 42, 32, 661134, tzinfo=datetime.timezone.utc), ti_context=TIRunContext(dag_run=DagRun(dag_id='otel_test_dag_with_pause_between_tasks', run_id='manual__2025-07-05T10:42:19.591073+00:00', logical_date=datetime.datetime(2025, 7, 5, 10, 42, 19, tzinfo=TzInfo(UTC)), data_interval_start=datetime.datetime(2025, 7, 5, 10, 42, 24, 195466, tzinfo=TzInfo(UTC)), data_interval_end=datetime.datetime(2025, 7, 5, 10, 42, 24, 195466, tzinfo=TzInfo(UTC)), run_after=datetime.datetime(2025, 7, 5, 10, 42, 24, 195466, tzinfo=TzInfo(UTC)), start_date=datetime.datetime(2025, 7, 5, 10, 42, 25, 477526, tzinfo=TzInfo(UTC)), end_date=None, clear_number=0, run_type=<DagRunType.MANUAL: 'manual'>, conf={}, consumed_asset_events=[]), task_reschedule_count=0, max_tries=0, variables=[], connections=[], upstream_map_indexes={'paused_task': None}, next_method=None, next_kwargs=None, xcom_keys_to_clear=[], should_retry=False), type='StartupDetails')
[2025-07-05T10:42:33.058+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2e-1eae-7140-b252-d527b5623293/heartbeat "HTTP/1.1 204 No Content"
2025-07-05 10:42:33 [debug    ] Received message from task runner [supervisor] msg=SetRenderedFields(rendered_fields={'templates_dict': None, 'op_args': [], 'op_kwargs': {}}, type='SetRenderedFields')
[2025-07-05T10:42:33.209+0000] {_client.py:1026} INFO - HTTP Request: PUT http://localhost:8080/execution/task-instances/0197da2e-1eae-7140-b252-d527b5623293/rtif "HTTP/1.1 201 Created"
2025-07-05 10:42:33 [debug    ] Received message from task runner [supervisor] msg=SucceedTask(state='success', end_date=datetime.datetime(2025, 7, 5, 10, 42, 33, 213640, tzinfo=datetime.timezone.utc), task_outlets=[], outlet_events=[], rendered_map_index=None, type='SucceedTask')
[2025-07-05T10:42:33.222+0000] {_client.py:1026} INFO - HTTP Request: PATCH http://localhost:8080/execution/task-instances/0197da2e-1eae-7140-b252-d527b5623293/state "HTTP/1.1 204 No Content"
2025-07-05 10:42:33 [info     ] Task finished                  [supervisor] duration=0.5786261719999857 exit_code=0 final_state=success
[2025-07-05T10:42:33.236+0000] {trace.py:128} INFO - Task execute_workload[408939e4-b045-4287-9d03-4b2b32a9b2c4] succeeded in 0.6100478650000696s: None
  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2025-07-05T10:42:52.003+0000] {scheduler_job_runner.py:971} INFO - Starting the scheduler
[2025-07-05T10:42:52.215+0000] {executor_loader.py:269} INFO - Loaded executor: :CeleryExecutor:
[2025-07-05T10:42:52.215+0000] {scheduler_job_runner.py:2130} INFO - Adopting or resetting orphaned tasks for active dag runs
[2025-07-05T10:42:52.218+0000] {scheduler_job_runner.py:2153} INFO - Marked 1 SchedulerJob instances as failed
[2025-07-05T10:42:52.375+0000] {otel_tracer.py:337} INFO - [OTLPSpanExporter] Connecting to OpenTelemetry Collector at http://breeze-otel-collector:4318/v1/traces
[2025-07-05T10:42:52.376+0000] {otel_tracer.py:338} INFO - Should use simple processor: False
[2025-07-05T10:42:52.376+0000] {otel_tracer.py:76} INFO - (otel_tracer.__init__) - [BatchSpanProcessor] is being used

worker: Warm shutdown (MainProcess)
[2025-07-05T10:42:58.731+0000] {scheduler_job_runner.py:290} INFO - Exiting gracefully upon receiving signal 15
[2025-07-05T10:42:58.732+0000] {scheduler_job_runner.py:1011} INFO - Exited execute loop
------------------------------------------------------------------------------------------ Captured stderr call ------------------------------------------------------------------------------------------
/usr/local/lib/python3.10/site-packages/celery/platforms.py:841 SecurityWarning: You're running the worker with superuser privileges: this is
absolutely not recommended!

Please specify a different user using the --uid option.

User information: uid=0 euid=0 gid=0 egid=0

------------------------------------------------------------------------------------------- Captured log call --------------------------------------------------------------------------------------------
INFO     integration.otel.test_otel:test_otel.py:1223 Control file exists and the task has been paused.
------------------------------------------------------------------------ generated xml file: /files/test_result-all-postgres.xml -------------------------------------------------------------------------
========================================================================================= slowest 100 durations ==========================================================================================
90.00s call     airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_change_after_the_first_task_finishes
90.00s call     airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_exits_gracefully_in_the_middle_of_the_first_task
54.59s call     airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_exits_forcefully_after_the_first_task_finishes
54.46s call     airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_exits_forcefully_in_the_middle_of_the_first_task
45.86s call     airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_dag_execution_succeeds
41.57s call     airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_same_scheduler_processing_the_entire_dag
17.60s setup    airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_dag_execution_succeeds

(31 durations < 0.005s hidden.  Use -vv to show these durations.)
================================================================================== Warning summary. Total: 9, Unique: 6 ==================================================================================
other: total 7, unique 4
  runtest: total 7, unique 4
tests: total 2, unique 2
  runtest: total 2, unique 2
Warnings saved into /files/warnings-all-postgres.txt file.
======================================================================================== short test summary info =========================================================================================
FAILED airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_change_after_the_first_task_finishes - Failed: Timeout >90.0s
FAILED airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_exits_gracefully_in_the_middle_of_the_first_task - Failed: Timeout >90.0s
FAILED airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_exits_forcefully_in_the_middle_of_the_first_task - AssertionError: Dag run span status isn't ended as expected.Actual status: should_end.
assert equals failed
  'should_end'                 <SpanStatus.ENDED: 'ended'>
FAILED airflow-core/tests/integration/otel/test_otel.py::TestOtelIntegration::test_scheduler_exits_forcefully_after_the_first_task_finishes - AssertionError: Dag run span status isn't ended as expected.Actual status: should_end.
assert equals failed
  'should_end'                 <SpanStatus.ENDED: 'ended'>
===================================================================== 4 failed, 2 passed, 10 skipped, 1 warning in 398.24s (0:06:38) =====================================================================

Dumping logs on error

###########################################################################################
                   Dumping logs from all the airflow tasks
###########################################################################################
                   Logs dumped to /files/airflow_logs_2025-07-05_0_0.log.tar.gz
###########################################################################################
